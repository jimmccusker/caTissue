<?xml version ="1.0"?>

<!--Ant Script for create Build for caTISSUE Core-->
<project name="caTissue Suite" default="compile">

	<!--define require dir and Properties for <if> </if> tag-->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="./lib/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<!--define require dir and Properties -->
	<property file="caTissueInstall.properties" />

	<property name="base.dir" value="." />
	<property name="src.dir" value="${base.dir}/WEB-INF/src" />
	<property name="target.dir" value="${base.dir}/WEB-INF/classes" />
	<property name="lib.dir" value="${base.dir}/WEB-INF/lib" />
	<property name="applet.dir" value="${base.dir}/Applet" />
	<property name="dagviewapplet.dir" value="${applet.dir}/DagViewApplet" />	
	<property name="hbm.dir" value="${src.dir}/edu/wustl/catissuecore/hbm" />
	<property name="extra_lib.dir" value="${base.dir}/extra_lib" />
	<property name="generateforce" value="true" />
	<property name="application.version" value="1.1" />
	<property name="junit.jar" value="${lib.dir}/junit-3.8.1.jar" />
	<property name="cobertura.dir" value="${target.dir}/reports/coverage" />
	<property name="report.dir" value="${base.dir}/WEB-INF" />
	<property name="catissue.applet.dir" value="${base.dir}/Applet/catissue" />

	<!--Properties set for checkstyle "Tools that generate report of code convention violations"-->
	<property name="checkstyle.dir" value="${base.dir}/checkstyle" />
	<property name="checkstyle.rules.file" value="${checkstyle.dir}/CheckStyleRules.xml" />
	<property name="checkstyle.report.formatter" value="${checkstyle.dir}/report_formatter/checkstyle-simple.xsl" />
	<property name="checkstyle.report.dir" value="${checkstyle.dir}/checkstyle_reports" />
	<property name="checkstyle.unformatted.report" value="${checkstyle.report.dir}/checkstyle_report.xml" />
	<property name="checkstyle.formatted.report" value="${checkstyle.report.dir}/catissue_suite_checkstyle_report.html" />

	<!-- csm related properties -->
	<property name="temp.dir" value="${base.dir}/tempCatissuecore" />
	<property name="oracle.dialect.h3.string" value="org.hibernate.dialect.Oracle9Dialect" />
	<property name="mysql.dialect.h3.string" value="org.hibernate.dialect.MySQLDialect" />
	
	<!--JUnit related Properties -->
	<property name="junit.dir" value="${base.dir}/junit"/>
	<property name="junit.report.dir" value="${junit.dir}/reports"/>
	
	<path id="checkstyle.classpath">
		<pathelement location="${lib.dir}/commonpackage.jar" />
		<pathelement location="${lib.dir}/DynamicExtensions.jar" />
	</path>

	<path id="app.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="xdoclet.classpath">
		<path refid="app.classpath" />
		<pathelement location="${extra_lib.dir}/commons-net-1.2.2.jar" />
		<pathelement location="${extra_lib.dir}/hibernate-tools.jar" />
		<pathelement location="${extra_lib.dir}/servlet-api.jar" />
		<pathelement location="${extra_lib.dir}/xdoclet-1.2.jar" />
		<pathelement location="${extra_lib.dir}/xdoclet-hibernate-module-1.2.jar" />
		<pathelement location="${extra_lib.dir}/xdoclet-xdoclet-module-1.2.jar" />
		<pathelement location="${extra_lib.dir}/xerces.jar" />
		<pathelement location="${extra_lib.dir}/xjavadoc-1.0.2.jar" />
		<pathelement location="${extra_lib.dir}/xsdlib.jar" />
	</path>

	<path id="junit.classpath">
		<pathelement location="${junit.jar}" />
		<pathelement location="${target.dir}" />
		<pathelement location="${base.dir}/cobertura/cobertura.jar" />
		<pathelement location="${base.dir}/cobertura/lib/jakarta-oro-2.0.8.jar" />
		<pathelement location="${base.dir}/cobertura/lib/asm-2.2.1.jar" />

		<path refid="app.classpath" />
	</path>

	<!-- sub tasks -->
	<target name="init" description="initialize">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${target.dir}" />
		<!-- Create the temp directory for caCORE CSM war file-->
		<mkdir dir="${temp.dir}" />

		<!-- Create the checkstyle report directory-->
		<delete dir="${checkstyle.report.dir}" />
		<mkdir dir="${checkstyle.report.dir}" />
	</target>

	<target name="clean" description="clean up">
		<delete includeemptydirs="true">
			<fileset dir="${target.dir}">
				<include name="**/*" />
				<exclude name="CVS" />
			</fileset>
		</delete>

	</target>

	<target name="checkstyle" depends="init" description="Generates a report of code convention violations.">
		<taskdef resource="checkstyletask.properties" classpath="${extra_lib.dir}/checkstyle-all-4.2.jar" />

		<checkstyle config="${checkstyle.rules.file}" failureProperty="checkstyle.failed" failOnViolation="false" classpathref="checkstyle.classpath">
			<formatter type="xml" tofile="${checkstyle.unformatted.report}" />
			<fileset dir="${src.dir}" includes="**/bean/*.java" />
			<fileset dir="${src.dir}" includes="**/actionForm/RequestDetailsForm.java, **/actionForm/RequestListFilterationForm.java,
						**/actionForm/CollectionProtocolForm.java" />
			<fileset dir="${src.dir}" includes="**/actionForm/OrderForm.java, **/actionForm/OrderSpecimenForm.java, **/actionForm/OrderBiospecimenArrayForm.java ,**/actionForm/OrderPathologyCaseForm.java, **/actionForm/DefineArrayForm.java" />
			<fileset dir="${src.dir}" includes="**/action/OrderSpecimenInitAction.java, **/action/OrderBiospecimenArrayAction.java, **/action/OrderPathologyCaseAction.java, **/action/RequestToOrderAction.java, **/RequestToOrderSubmitAction.java, **DefineArrayAction.java, **DefineArraySubmitAction.java" />
			<fileset dir="${src.dir}" includes="**/action/RequestDetailsAction.java, **/action/RequestListAction.java, **/action/SubmitRequestDetailsAction.java, 
						**/action/UpdateAvailableQuantity.java" />
			<fileset dir="${src.dir}" includes="**/action/ShowFramedPageAction.java ,**/action/UpdateStatusAction.java ,**/action/TreeDataAction.java ,**/action/AddToOrderListAction.java" />
			<fileset dir="${src.dir}" includes="**/util/OrderingSystemUtil.java" />
			<fileset dir="${src.dir}" includes="**/domain/pathology/*.java" />
			<fileset dir="${src.dir}" includes="**/domain/OrderItem.java, **/domain/OrderDetails.java, **/domain/SpecimenOrderItem.java, **/domain/ExistingSpecimenOrderItem.java, **/domain/NewSpecimenOrderItem.java, **/domain/DerivedSpecimenOrderItem.java, **/domain/PathologicalCaseOrderItem.java, **/domain/SpecimenArrayOrderItem.java, 
				   		**/domain/ExistingSpecimenArrayOrderItem.java,**/domain/CollectionProtocol.java" />
			<fileset dir="${src.dir}" includes="**/reportloader/*.java" />
			<fileset dir="${src.dir}" includes="**/bizlogic/OrderBizLogic.java" />
			<fileset dir="${src.dir}" includes="**/bizlogic/querysuite/*.java" />
			<fileset dir="${src.dir}" includes="**/action/querysuite/*.java" />
			<fileset dir="${src.dir}" includes="**/edu/wustl/catissuecore/util/querysuite/*.java"/>					
		</checkstyle>

		<style in="${checkstyle.unformatted.report}" out="${checkstyle.formatted.report}" style="${checkstyle.report.formatter}" />
	</target>

	<target name="checkstyle_wrapper" depends="checkstyle" description="Breaks the build is checkstyle detected code conventions violations.">
	</target>

	<!-- Compile all files, generated and hand-written -->
	<target name="compile" depends="init, checkstyle_wrapper">
		<javac destdir="${target.dir}" includes="**/*.*" includeAntRuntime="false" debug="yes">
			<src path="${src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
				<pathelement location="C:\apache-ant-1.6.5\lib\ant.jar" />
			</classpath>
		</javac>
		<copy todir="${target.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
				<include name="**/*.dll" />
			</fileset>
		</copy>

	</target>

	<!-- Create the Applet JAR Begins-->
	<target name="build_applet_jar" depends="compile">
		<delete>
			<fileset dir="${applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
				<exclude name="**/cab2bStandAlone.jar" />
				<exclude name="**/commonpackage.jar" />
				<exclude name="**/org-netbeans-graph.jar" />
				<exclude name="**/org-netbeans-graph-vmd.jar" />
				<exclude name="**/org-openide-util.jar" />
				<exclude name="**/DynamicExtensions.jar" />		
				<include name="**/swingx-2006_10_08.jar" />								
				<include name="**/struts.jar" />								
				<include name="**/hibernate2.1.7c.jar" />								
				<include name="**/odmg.jar"/>	
				<exclude name="**/dagViewApplet.jar" />		
			</fileset>
		</delete>

		<copy todir="${applet.dir}">
			<fileset dir="${target.dir}">
				<include name="**/QueryTree.class" />
				<include name="**/NodeSelectionListener.class" />
				<include name="**/StorageLocationViewListener.class" />
				<include name="**/TissueSiteTreeNodeListener.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/query">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/query">
				<include name="**/QueryTreeNodeMap.class" />
				<include name="**/TreeNodeData.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/storage">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/storage">
				<include name="**/GenerateTree.class" />
				<include name="**/StorageContainerGridObject.class" />
				<include name="**/StorageContainerTreeNode.class" />
			</fileset>
		</copy>
		<!--copy todir="${applet.dir}/edu/wustl/catissuecore/tissuesite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/tissuesite">
				<include name="**/TissueSiteTreeNode.class" />
			</fileset>
		</copy-->
		<copy todir="${applet.dir}/edu/wustl/catissuecore/util/global">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/util/global">
				<include name="**/Constants.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/vo">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/vo">
				<include name="**/TreeNode.class" />
				<include name="**/TreeNodeFactory.class" />
			</fileset>
		</copy>

		<jar taskname="buildJar" jarfile="${applet.dir}/QueryTree.jar">
			<fileset dir="${applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
	</target>
	<!-- Create the Applet JAR Ends-->

	<!-- Creates the WAR (Web Application Archive) file of the application -->
	<target name="build_war" depends="init, compile, unpack_cacore_war,replace_database_type,build_dagViewApplet_jar,common_build_war,build_client_jar">
	</target>
	<!-- Create war file for installable zip file.Please us this target when creating installable zip. 
		Note: database type is not replaced 
	-->
	<target name="installable_build_war" depends="init, compile, unpack_cacore_war,build_dagViewApplet_jar,common_build_war,build_client_jar">
	</target>
	
	<!-- build catissuecore war file which is common to above both targets -->
	<target name="common_build_war">
		<delete file="catissuecore.war" />
		<!-- Here duplicate="preserver" is used skip copying duplicate-->
		<war destfile="catissuecore.war" webxml="WEB-INF/web.xml" duplicate="preserve">
			<fileset dir="${base.dir}">
				<include name="Applet/**" />
				<include name="css/**" />
				<include name="images/**" />
				<include name="jss/**" />
				<include name="dhtml_comp/**" />
				<include name="pages/**" />
				<include name="runtime/**" />
				<include name="WEB-INF/**" />
				<include name="CDEConfig.xml" />
				<include name="CDEConfig.xsd" />
				<include name="ApplicationVersionInfo.txt" />

				<exclude name="**/WEB-INF/src*/**" />
				<exclude name="**/*servlet.jar*" />
				
				<exclude name="**/*hibernate2.jar*" />
				<exclude name="**/*jta.jar*" />
				<exclude name="**/CVS*" />
				<!--exclude name="**/*build*"/>
				<exclude name="**/*log4j-1.2.9.jar*" />
				<exclude name="**/*WEB-INF*"/>
				<exclude name="**/.*"/>
				<exclude name="**/*.sql"/>
				<exclude name="**/catissuecorecsm.war"/>
				<exclude name="**/catissuecore.war"/>
				<exclude name="**/caTissue_Core_Installable.zip"/>
				<exclude name="**/caTissue_Core_Installable/**"/>
				<exclude name="**/caTISSUECore caCORE Client/**"/-->
			</fileset>

			<!-- change for csm related war -->
			<fileset dir="${temp.dir}/catissuecorecsm">
				<include name="**/WEB-INF/**" />
				<include name="**/images/**" />
				<include name="**/log/**" />
				<include name="**/*" />

				<exclude name="**/WEB-INF/web.xml" />
				<exclude name="**/WEB-INF/classes/edu/wustl/catissuecore/domain/**" />
				<exclude name="**/WEB-INF/lib/csmapi.jar" />
				<exclude name="**/META-INF/**" />
			</fileset>
		</war>
	</target>

	<target name="clean_temp_dir_csmwar" description="delete temp directory used for caCORE unpack">
		<!-- do delete ${temp.dir} -->
		<delete dir="${temp.dir}" />
		<delete file="${jboss.home.dir}/server/default/deploy/catissuecorecsm.war" />
	</target>

	<!--Deploys the application war file at JBOSS server by coping it to deploy directory of application server-->
	<target name="deploy">
		<!--antcall target="clean" /-->
		<antcall target="build_war" />
		<!-- delete temp dir -->
		<antcall target="clean_temp_dir_csmwar" />
		<!--antcall target="cleanserver" /-->
		<!-- Not required to copy csm war file -->
		<copy file="catissuecore.war" todir="${jboss.home.dir}/server/default/deploy" />
		<sleep seconds="2" />
	</target>



	<!-- 
		Generates the Hibernate mapping (HBM) files which are used in mapping 
		the domain objects to database schema of the application. 
		This generates the HBM files from the XDoclet tags written in the domain object classes. 
	-->
	<target name="generate_hbm" description="Generates Hibernate class descriptor files.">
		<!-- Define the hibernatedoclet task -->
		<taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask">
			<classpath refid="xdoclet.classpath" />
		</taskdef>

		<!-- Execute the hibernatedoclet task -->
		<hibernatedoclet destdir="${src.dir}" excludedtags="@version,@author,@todo" force="${generateforce}" mergedir="${src.dir}" verbose="false">
			<fileset dir="${src.dir}">
				<include name="**/domain/*.java" />
				<include name="**/domain/pathology/*.java" />
				<!--include name="**/cde/*.java" /-->
			</fileset>
			<hibernate version="2.0" />
		</hibernatedoclet>

		<!-- Upgrade grammar from Hibernate1 to Hibernate2 -->
		<replace dir="${src.dir}">
			<include name="**/domain/*.hbm.xml" />
			<!--include name="**/cde/*.hbm.xml" /-->
			<include name="**/domain/pathology/*.hbm.xml" />
			<replacefilter token="readonly=" value="inverse=" />
			<replacefilter token="role=" value="name=" />
			<replacefilter token="hibernate-mapping.dtd" value="hibernate-mapping-2.0.dtd" />
		</replace>

		<copy todir="${hbm.dir}">
			<fileset dir="${src.dir}/edu/wustl/catissuecore/domain">
				<include name="*.hbm.xml" />
			</fileset>
			<!--fileset dir="${src.dir}/edu/wustl/common/cde">
				<include name="*.hbm.xml" />
			</fileset-->
			<fileset dir="${src.dir}/edu/wustl/catissuecore/domain/pathology">
				<include name="*.hbm.xml" />
			</fileset>
		</copy>

		<delete>
			<fileset dir="${src.dir}/edu/wustl/catissuecore/domain" includes="*.hbm.xml" />
			<!--fileset dir="${src.dir}/edu/wustl/common/cde" includes="*.hbm.xml" /-->
			<fileset dir="${src.dir}/edu/wustl/catissuecore/domain/pathology" includes="*.hbm.xml" />
		</delete>
	</target>

	<target name="create_zip" depends="installable_build_war">
		<property name="zip.dir" value="${base.dir}/caTISSUE_Core_Installable_v${application.version}" />
		<property name="zip.file" value="${base.dir}/caTissue_Core_Installable_v${application.version}.zip" />

		<delete file="${zip.file}" />
		<delete dir="${zip.dir}" />

		<mkdir dir="${zip.dir}" />

		<copy file="catissuecore.war" todir="${zip.dir}" overwrite="true" />
		<!-- only single war file is being used so comment it -->
		<!-- <copy file="catissuecorecsm.war" todir="${zip.dir}" overwrite="true" /> -->
		<copy file="catissuecore-ds.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="caTissueInstall.properties" todir="${zip.dir}" overwrite="true" />
		<copy file="deploy.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="log4j.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="login-config.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="properties-service.xml" todir="${zip.dir}" overwrite="true" />

		<copy todir="${zip.dir}/catissuecore-properties" overwrite="true">
			<fileset dir="${base.dir}/catissuecore-properties" />
		</copy>

		<copy todir="${zip.dir}/lib" overwrite="true">
			<fileset file="${base.dir}/extra_lib/ant-contrib.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/mysql-connector-java-3.0.16-ga-bin.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/oracleDriver.jar" />
		</copy>

		<copy todir="${zip.dir}/SQL" overwrite="true">
			<fileset dir="${base.dir}/SQL" />
		</copy>
		<!--delete dir="${zip.dir}/SQL/DBUpgrade" /-->

		<copy file="MySql_DB_Creation.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="Oracle_DB_Creation.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="Sample-log4j.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="Sample-login-config.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="Sample-properties-service.xml" todir="${zip.dir}" overwrite="true" />

		<copy todir="${zip.dir}/images" overwrite="true">
			<fileset file="${base.dir}/images/InstitutionLogo.gif" />
		</copy>

		<copy todir="${zip.dir}/caTissueCore_caCORE_Client" overwrite="true">
			<fileset dir="${base.dir}/caTissueCore_caCORE_Client" />
		</copy>
		<!--- caTIES related files  start-->
		<copy todir="${zip.dir}/CaTIES_conf" overwrite="true">
			<fileset dir="${base.dir}/CaTIES_conf" />
		</copy>
		<copy file="Dataset.dtd" todir="${zip.dir}" overwrite="true" />
		<copy file="JniDeID.dll" todir="${zip.dir}" overwrite="true" />
		<!--- caTIES related files  end-->
		<zip destfile="${zip.file}" basedir="${zip.dir}" />
		<delete dir="${zip.dir}" />
	</target>


	<!-- =================================================================== -->
	<!-- Junit test case execution report                                    -->
	<!-- =================================================================== -->
	<target name="run_junit_testcases">
		<mkdir dir="${target.dir}/reports" />
		<mkdir dir="${target.dir}/reports/junit" />

		<junit printsummary="yes" fork="yes" haltonfailure="no">
			<formatter type="xml" />

			<!--
					Specify the name of the coverage data file to use.
					The value specified below is the default.
 	     -->
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.dir}/coverage.ser" />


			<classpath>
				<pathelement path="${cobertura.dir}" />
				<pathelement path="${target.dir}" />
			</classpath>

			<classpath refid="junit.classpath" />

			<batchtest todir="${target.dir}/reports/junit">
				<fileset dir="${src.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>

		</junit>
	</target>


	<target name="gen_detailed_report_junit_testcases">
		<antcall target="clean" />
		<antcall target="compile" />
		<antcall target="run_junit_testcases" />
		<mkdir dir="${report.dir}/reports/junit" />

		<junitreport todir="${report.dir}/reports/junit">
			<fileset dir="${target.dir}/reports/junit">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}/reports/junit" />
		</junitreport>
	</target>


	<!--  Added by Ashish Gupta for Ordering System and Consent Tracking -->
	<target name="gen_simple_report_junit_testcases" depends="compile">
		<delete dir="${junit.report.dir}" />
		<mkdir dir="${junit.report.dir}" />
		<junit printsummary="yes" haltonfailure="no" fork="yes">
			<!--formatter type="plain" usefile="false"/-->
			<formatter type="xml" />
			<batchtest todir="${junit.report.dir}">
				<fileset dir="${src.dir}">
					<include name="**/TestAll.java" />
				</fileset>
			</batchtest>
			<classpath>
				<!--  <pathelement location="${junit.classes.dir}"/> -->
				<pathelement location="${target.dir}" />
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</junit>
		<junitreport todir="${junit.report.dir}">
			<fileset dir="${junit.report.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${junit.report.dir}" />
		</junitreport>
		<delete>
			<fileset dir="${junit.report.dir}">
				<include name="**/**/*.xml" />
			</fileset>
		</delete>
	</target>
	
	<!--  Added by Vijay Pande for CaTIES -->
	<target name="gen_simple_report_junit_testcases_caties" depends="compile">
		<delete dir="${junit.report.dir}" />
		<mkdir dir="${junit.report.dir}" />
		<junit printsummary="yes" haltonfailure="no" fork="yes">
			<!--formatter type="plain" usefile="false"/-->
			<formatter type="xml" />
			<batchtest todir="${junit.report.dir}">
				<fileset dir="${src.dir}">
					<include name="**/TestAllCaTIES.java" />
				</fileset>
			</batchtest>
			<classpath>
				<!--  <pathelement location="${junit.classes.dir}"/> -->
				<pathelement location="${target.dir}" />
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</junit>
		<junitreport todir="${junit.report.dir}">
			<fileset dir="${junit.report.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${junit.report.dir}" />
		</junitreport>
		<delete>
			<fileset dir="${junit.report.dir}">
				<include name="**/**/*.xml" />
			</fileset>
		</delete>
	</target>
	
	<!-- =================================================================== -->
	<!-- Cobertura code coverage report                                      -->
	<!-- =================================================================== -->

	<taskdef classpathref="junit.classpath" resource="tasks.properties" />

	<target name="instrument">

		<mkdir dir="${cobertura.dir}" />
		<!--
	       Instrument the application classes, writing the
	       instrumented classes into ${build.instrumented.dir}.
	    -->
		<cobertura-instrument datafile="${cobertura.dir}/coverage.ser" todir="${cobertura.dir}">
			<!--
	         The following line causes instrument to ignore any
	         source line containing a reference to log4j, for the
	         purposes of coverage reporting.
	      -->
			<ignore regex="org.apache.log4j.*" />

			<fileset dir="${target.dir}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
				<exclude name="**/Mock*.class" />
			</fileset>
		</cobertura-instrument>
	</target>


	<target name="gen_report_cobertura">
		<antcall target="clean" />
		<antcall target="compile" />
		<antcall target="instrument" />
		<antcall target="run_junit_testcases" />

		<cobertura-report datafile="${cobertura.dir}/coverage.ser" srcdir="${src.dir}" destdir="${report.dir}/reports/coverage" />

		<delete file="${cobertura.dir}/coverage.ser" />
	</target>
	
 <!-- Create the Applet JAR Begins-->

    <target name="build_catissue_applet_jar" depends="build_catissue_applet_compile">
        <mkdir dir="${catissue.applet.dir}"/>
        <delete>
            <fileset dir="${catissue.applet.dir}">
                <exclude name="**/CVS*" />
                <exclude name="**/java.policy.applet*" />
            </fileset>
        </delete>
        <!-- Mandar : 30Oct06 : Image Folder -->
        <copy todir="${catissue.applet.dir}/images">	
    		<fileset dir="${base.dir}/images">
	    	    <include name="**/*"/>
    		</fileset>
    	 </copy>
        
        <copy todir="${catissue.applet.dir}">
           <fileset dir="${target.dir}">
                <include name="**/edu/wustl/catissuecore/applet/**" />
                <include name="**/edu/wustl/catissuecore/util/global/Constants.class" />
                <include name="**/edu/wustl/common/util/global/Validator.class" />
            </fileset>
        </copy>
        <jar taskname="buildJar" jarfile="${applet.dir}/CaTissueApplet.jar">
	        <fileset dir="${catissue.applet.dir}">
                <exclude name="**/CVS*" />
                <exclude name="**/java.policy.applet*" />
	        </fileset>
        </jar>
        <delete includeemptydirs="true">
	        <fileset dir="${catissue.applet.dir}">
                <include name="**/*" />
                <exclude name="**/CVS*" />                                     
	        </fileset>
        </delete>
    </target>
	
	
	
	<!-- compilation using jdk1.3 -->
	 <target name="build_catissue_applet_compile" depends="init">
	 	 <javac destdir="${target.dir}" includeAntRuntime="false" fork="yes" executable="D:/jdk1.3/bin/javac" compiler="javac1.3">
            <src path="${src.dir}"/>
            <include name="**/edu/wustl/catissuecore/applet/**" />
            <include name="**/edu/wustl/catissuecore/util/global/Constants.java" />
        	<include name="**/edu/wustl/common/util/global/Validator.java" />
            <classpath>
              <fileset dir="${lib.dir}">
                  <include name="*.jar"/>
              </fileset>
            </classpath>       
        </javac>      
    </target>
	
	<!-- unpack caCORE war into temp folder -->
	<target name="unpack_cacore_war">
		<unwar src="${base.dir}/catissuecorecsm.war" dest="${temp.dir}/catissuecorecsm"/>
		<!--
		<if>
			<equals arg1="mysql" arg2="${database.type}"/>
			<then>
				<replace dir="${temp.dir}/catissuecorecsm/WEB-INF/classes" propertyfile="caTissueInstall.properties"> 
					<include name ="orm1.cfg.xml"/>
					<replacefilter token="@@dialect@@" value="${mysql.dialect.h3.string}"/>
				</replace>
			</then>
		</if>
		
		<if>	
				<equals arg1="oracle" arg2="${database.type}"/>
				<then>
					<replace dir="${temp.dir}/catissuecorecsm/WEB-INF/classes" propertyfile="caTissueInstall.properties"> 
						<include name ="orm1.cfg.xml"/>
						<replacefilter token="@@dialect@@" value="${oracle.dialect.h3.string}"/>
					</replace>
				</then>
		</if>
		-->
	</target>
	
	<target name="replace_database_type">
		<if>
			<equals arg1="mysql" arg2="${database.type}"/>
			<then>
				<replace dir="${temp.dir}/catissuecorecsm/WEB-INF/classes" propertyfile="caTissueInstall.properties"> 
					<include name ="orm1.cfg.xml"/>
					<replacefilter token="@@dialect@@" value="${mysql.dialect.h3.string}"/>
				</replace>
			</then>
		</if>
		
		<if>	
				<equals arg1="oracle" arg2="${database.type}"/>
				<then>
					<replace dir="${temp.dir}/catissuecorecsm/WEB-INF/classes" propertyfile="caTissueInstall.properties"> 
						<include name ="orm1.cfg.xml"/>
						<replacefilter token="@@dialect@@" value="${oracle.dialect.h3.string}"/>
					</replace>
				</then>
		</if>
	</target>
	
	<!-- build catissuecore client jar to content latest domain classes & put inside client lib folder-->
	<target name="build_client_jar">
		<jar taskname="buildClientJar" jarfile="${temp.dir}/catissuecore.jar">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**"/>
				<include name="**/edu/wustl/catissuecore/actionForm/**"/>
				<include name="**/edu/wustl/catissuecore/util/**"/>
				<include name="**/edu/wustl/catissuecore/client/**"/>
				<include name="**/edu/wustl/catissuecore/bean/**" />
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
		
		<copy todir="${base.dir}/caTissueCore_caCORE_Client/lib" overwrite="true">
            <fileset dir="${lib.dir}">
            	<include name="commonpackage.jar"/>
            </fileset>
        </copy>

		<copy todir="${base.dir}/caTissueCore_caCORE_Client/lib" overwrite="true">
            <fileset dir="${temp.dir}">
            	<include name="catissuecore.jar"/>
            </fileset>
        </copy>
	</target>
	
	<target name="sendMail"  description="Send mail">
	        <mail ssl="off" user="${proxy.username}" password="${proxy.password}" mailhost="${proxy.host}" tolist="${proxy.to}" cclist="${proxy.cc}" subject="${proxy.subject}" from="${proxy.from}" >
	            <message> "${proxy.message}"</message>
	            <fileset dir="${proxy.dir1}" includes="*.*" ></fileset>
				<fileset dir="${proxy.dir2}" includes="${proxy.fileName}" ></fileset>
	        </mail>
	</target>
	<target name="Generate-Schema">
		<java classname="edu.wustl.common.util.dbManager.GenerateSchema">
			<arg value="false" />
			<classpath>
				<pathelement path="${target.dir}" />
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${extra_lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	
	
	<!-- Create the Applet JAR Begins-->
		<target name="build_dagViewApplet_jar" depends="compile">
			<delete dir="${dagviewapplet.dir}" />
			<mkdir dir="${dagviewapplet.dir}" />
			<copy todir="${applet.dir}">
				<fileset dir="${lib.dir}">
					<include name="**/cab2bStandAlone.jar" />
					<include name="**/commonpackage.jar" />
					<include name="**/org-netbeans-graph.jar" />
					<include name="**/org-netbeans-graph-vmd.jar" />
					<include name="**/org-openide-util.jar" />
					<include name="**/DynamicExtensions.jar" />		
					<include name="**/swingx-2006_10_08.jar" />								
					<include name="**/struts.jar" />								
					<include name="**/hibernate2.1.7c.jar" />								
					<include name="**/odmg.jar"/>
					<include name="**/log4j-1.2.9.jar"/>
				</fileset>
			</copy>
			<copy todir="${dagviewapplet.dir}/images">	
	    		<fileset dir="${base.dir}/images/dagViewImages">
		    	    <include name="**/*"/>
	    		</fileset>
	    	 </copy>
			<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/ui/querysuite">
				<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/ui/querysuite">
					<include name="**/*.class" />
				</fileset>
			</copy>
			<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/ui">
				<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/ui">
					<include name="**/BaseApplet.class" />
				</fileset>
			</copy>
			<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/model">
				<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/model">
					<include name="**/BaseAppletModel.class" />
				</fileset>
			</copy>
			<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/model">
				<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/model">
					<include name="**/AppletModelInterface.class" />
				</fileset>
			</copy>
			<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet">
				<fileset dir="${target.dir}/edu/wustl/catissuecore/applet">
					<include name="**/AppletServerCommunicator.class" />
				</fileset>
			</copy>
			<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/bizlogic/querysuite">
				<fileset dir="${target.dir}/edu/wustl/catissuecore/bizlogic/querysuite">
					<include name="**/GenerateHtmlForAddLimitsBizLogic.class" />
				</fileset>
			</copy>
			<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/util">
				<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/util">
					<include name="**/CommonAppletUtil.class" />
				</fileset>
			</copy>
			<copy todir="${dagviewapplet.dir}">
				<fileset dir="${target.dir}">
					<include name="**/dynamicUI.xml" />
				</fileset>
			</copy>
			<jar taskname="buildJar" jarfile="${applet.dir}/dagViewApplet.jar">
				<fileset dir="${dagviewapplet.dir}">
					<include name="**/**" />
				</fileset>
			</jar>
			<delete dir="${dagviewapplet.dir}" />
		</target>
		<!-- Create the Applet JAR Ends-->

</project>