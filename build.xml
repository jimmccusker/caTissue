<?xml version ="1.0"?>

<!--Ant Script for create Build for caTISSUE Core-->

<project name="caTISSUE_Core" default="compile">
	
	<!--define require dir and Properties -->	
	<property name="base.dir" value="."/>
    <property name="src.dir" value="${base.dir}/WEB-INF/src"/>
    <property name="target.dir" value="${base.dir}/WEB-INF/classes"/>
    <property name="lib.dir" value="${base.dir}/WEB-INF/lib"/>
    <property name="build.dir" value="${base.dir}/build"/>
    <property name="applet.dir" value="${base.dir}/Applet"/>
	<property name="hbm.dir" value="${src.dir}/edu/wustl/catissuecore/hbm"/>
	<property name="tomcat.dir" value="CATALINA_HOME"/>
	<property name="deploy.dir" value="E:\Program_Files\jboss-4.0.0\server\default\deploy"/>
	<property name="extra_lib.dir" value="${base.dir}/extra_lib"/>
	<property name="mysql.dir" value="${base.dir}/SQL/MySql"/>
	<property name="oracle.dir" value="${base.dir}/SQL/Oracle"/>
	<property name="common.dir" value="${base.dir}/SQL/Common"/>
		
    <property name="generateforce" value="true"/>
    
	<path id="app.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="xdoclet.classpath">
		<path refid="app.classpath"/>

        <pathelement location="${extra_lib.dir}/commons-net-1.2.2.jar"/>
		<pathelement location="${extra_lib.dir}/hibernate-tools.jar"/>
		<pathelement location="${extra_lib.dir}/servlet-api.jar"/>
		<pathelement location="${extra_lib.dir}/xdoclet-1.2.jar"/>
		<pathelement location="${extra_lib.dir}/xdoclet-hibernate-module-1.2.jar"/>
		<pathelement location="${extra_lib.dir}/xdoclet-xdoclet-module-1.2.jar"/>
		<pathelement location="${extra_lib.dir}/xerces.jar"/>
		<pathelement location="${extra_lib.dir}/xjavadoc-1.0.2.jar"/>
		<pathelement location="${extra_lib.dir}/xsdlib.jar"/>
	</path>
	
    <!--Build the complete project-->
    <!--target name="build" depends="compile,generateHBM,copy-resources,buildjar,createExe">
    </target-->
	
	<!-- sub tasks -->    
	<target name="init">
    	<!-- Create the time stamp -->
	    <tstamp/>
    	<!-- Create the build directory structure used by compile -->
	    <mkdir dir="${target.dir}"/>
	    <mkdir dir="${build.dir}"/>
  	</target>
  	
	<target name="FTPUpload" description="Upload the build file to ftp server">
		<ftp server="paftp.persistent.co.in" userid="washu" password="washu123"
		   	 remotedir = "/catissuecore/" action = "put"			
			 binary="yes" passive="no">
	    		<fileset dir="${build.dir}"/>
		</ftp>
	</target>
	
	<target name="TarApp" depends="init">
		<tar destfile="${build.dir}/catissuecore.tar"
	      	 basedir="${base.dir}"
	      	 excludes="**/catissuecore.tar,**/build/"/>
	</target> 
	
	<target name="WarApp" depends="init,Appletjar">
		<delete file="catissuecore.war"/>
		<war destfile="catissuecore.war" webxml="WEB-INF/web.xml">
			<fileset dir="${base.dir}">
				<exclude name="**/*build*"/>
				<exclude name="**/*WEB-INF*"/>
				<exclude name="**/*servlet.jar*"/>
				<exclude name="**/*log4j-1.2.9.jar*"/>
				<exclude name="**/*hibernate2.jar*"/>
				<exclude name="**/*jta.jar*"/>
				<exclude name="**/.*"/>
				<exclude name="**/*.sql"/>
				<exclude name="**/CVS*"/>
			</fileset>
			
			<!--fileset dir="${base.dir}"/-->
		  	<!--lib dir="${lib.dir}">
            	<include name="*.jar"/>
        	</lib-->
		</war>
		<delete file="E:\Program_Files\jboss-4.0.0\server\default\deploy\catissuecore.war"/>
		 
		<copy file="catissuecore.war" todir="E:\Program_Files\jboss-4.0.0\server\default\deploy"/>
		<sleep seconds="2"/>
	</target>


	
	<target name="AppSetup" depends="compile,TarApp,FTPUpload">
		</target>
<!--includes="**css/*,**/images/*,**/jss/*,**/pages/*,**/WEB-INF/*,*.jsp"-->
	<target name="StartTomcat">
	    <echo>"${tomcat.dir}"/</echo>
  	</target>

	<target name="imvishnu">
	  <sshexec host="im-vishnu.wustl.edu"
		username="clususer"
		password="cl~user4vishnu"
		command="pwd"/>
	</target>
	
	
	
    		<!-- Compile all files, generated and hand-written -->
    <target name="compile" depends="init">
        <javac destdir="${target.dir}" includes="**/*.*" includeAntRuntime="false">
            <src path="${src.dir}"/>
            <classpath>
              <fileset dir="${lib.dir}">
                  <include name="*.jar"/>
              </fileset>
            </classpath>       
        </javac>
    </target>
    
    <!--Copy required resources-->
    <!--target name="copy-resources">
        <copy todir="${target.dir}">
        <fileset dir="${src.dir}">
            <exclude name="**/*.java"/>
        </fileset>
    	</copy>
    </target-->
    
	
	
	<!-- sshexec host="somehost"
		username="dude"
		password="yo"
		command="touch somefile"/-->

	
    <!-- Create the application JAR -->
    <target name="buildjar" depends="compile" >
        <delete>
            <fileset dir="${build.dir}" includes="**/*"/>
        </delete>
        
        <jar taskname="buildJar" jarfile="${build.dir}/catissuecore.jar">
            <fileset dir="${target.dir}" includes="**/*"/>
        </jar>
    </target>

    <!-- Create the Applet JAR Begins-->
    <target name="Appletjar" depends="compile" >
    	<delete>
            <fileset dir="${applet.dir}">
	            <exclude name="**/CVS*"/>
	            <exclude name="**/java.policy.applet*"/>
            </fileset>
        </delete>
        
        <copy todir="${applet.dir}">
        	<fileset dir="${target.dir}">
            	<include name="**/QueryTree.class"/>
				<include name="**/NodeSelectionListener.class"/>
				<include name="**/StorageLocationViewListener.class"/>
				<include name="**/TissueSiteTreeNodeListener.class"/>
        	</fileset>
        </copy>
        <copy todir="${applet.dir}/edu/wustl/catissuecore/query">
        	<fileset dir="${target.dir}/edu/wustl/catissuecore/query">
	    	    <include name="**/QueryTreeNodeMap.class"/>
	    	    <include name="**/TreeNodeData.class"/>
    		</fileset>
    	</copy>
        <copy todir="${applet.dir}/edu/wustl/catissuecore/storage">	
    		<fileset dir="${target.dir}/edu/wustl/catissuecore/storage">
	    	    <include name="**/GenerateTree.class"/>
	    	    <include name="**/StorageContainerGridObject.class"/>
	    	    <include name="**/StorageContainerTreeNode.class"/>
    		</fileset>
    	</copy>
        <copy todir="${applet.dir}/edu/wustl/catissuecore/tissuesite">	
    		<fileset dir="${target.dir}/edu/wustl/catissuecore/tissuesite">
	    	    <include name="**/TissueSiteTreeNode.class"/>
    		</fileset>
    	</copy>
        <copy todir="${applet.dir}/edu/wustl/catissuecore/util/global">	
    		<fileset dir="${target.dir}/edu/wustl/catissuecore/util/global">
	    	    <include name="**/Constants.class"/>
    		</fileset>
    	</copy>
    	<copy todir="${applet.dir}/edu/wustl/catissuecore/vo">	
    		<fileset dir="${target.dir}/edu/wustl/catissuecore/vo">
	    	    <include name="**/TreeNode.class"/>
	    	    <include name="**/TreeNodeFactory.class"/>
    		</fileset>
    	</copy>
    	
        <jar taskname="buildJar" jarfile="${applet.dir}/QueryTree.jar">
            <fileset dir="${applet.dir}">
	            <exclude name="**/CVS*"/>
	            <exclude name="**/java.policy.applet*"/>
            </fileset>
        </jar>
    </target>
	<!-- Create the Applet JAR Ends-->
    
    <!--Create executable required Structure-->
    <!--target name="createExe">
	    <copy todir="${build.dir}">
        	<fileset dir="${base.dir}">
            	<include name="hibernate.properties"/>
        	</fileset>
    	</copy>
		
    	<copy todir="${base.dir}/${icons.dir}">
    		<fileset dir="${icons.dir}"/>
    	</copy>
    	
    	<copy todir="${base.dir}/${lib.dir}">
    		<fileset dir="${lib.dir}"/>
    	</copy>
    </target-->
 
    <target name="generateHBM" description="Generates Hibernate class descriptor files.">
    	<!-- Define the hibernatedoclet task -->    	
    	<taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask">
    		<classpath refid="xdoclet.classpath"/>
		</taskdef>    
		
		<!-- Execute the hibernatedoclet task -->		
		<hibernatedoclet destdir="${src.dir}" excludedtags="@version,@author,@todo"
					     force="${generateforce}" mergedir="${src.dir}" verbose="false">
			<fileset dir="${src.dir}">
				<include name="**/domain/*.java"/>
				<include name="**/cde/*.java"/>
			</fileset>
    		<hibernate version="2.0"/>
		</hibernatedoclet>	
		
		<!-- Upgrade grammar from Hibernate1 to Hibernate2 -->
	    <replace dir="${src.dir}">
	    	<include name="**/domain/*.hbm.xml"/>
	        <include name="**/cde/*.hbm.xml"/>
	        <replacefilter token="readonly=" value="inverse="/>
	        <replacefilter token="role=" value="name="/>
	        <replacefilter token="hibernate-mapping.dtd" value="hibernate-mapping-2.0.dtd"/>
	    </replace>
	    
	    <copy todir="${hbm.dir}">
	    	<fileset dir="${src.dir}/edu/wustl/catissuecore/domain">
	    	            	<include name="*.hbm.xml"/>
    		</fileset>
	    	<fileset dir="${src.dir}/edu/wustl/common/cde">
	    	            	<include name="*.hbm.xml"/>
	       	</fileset>
	    </copy>
    	
    	<delete>
            <fileset dir="${src.dir}/edu/wustl/catissuecore/domain" includes="*.hbm.xml"/>
    		<fileset dir="${src.dir}/edu/wustl/common/cde" includes="*.hbm.xml"/>
        </delete>
    </target>

	<!--Not Complete, YET TO DO-->
	<!--target name="Genrate-Schema" depends="buildjar, generateHBM"-->
	<target name="Genrate-Schema" depends="buildjar">
    	<java classname="edu.wustl.common.util.dbManager.GenerateSchema">
    		<arg value="true"/>	
            <classpath>
	            <pathelement location="${build.dir}/catissuecore.jar"/>
            	<fileset dir="${lib.dir}">
                  <include name="*.jar"/>
              </fileset>
            </classpath>       
      	</java>
    </target>
	<target name="DBInitialized_MySQL">
	    	<sql
				driver="org.gjt.mm.mysql.Driver"
			    url="jdbc:mysql://localhost:3306/catissuecoretest"
			    userid="root"
			    password="mysql123" 
	    		onerror="continue">
			  <transaction  src="${mysql.dir}/catissuecore.sql"/>
			  <transaction  src="${mysql.dir}/InitDB_CreateTable.sql"/>
			  <transaction  src="${common.dir}/initDB_Insert_Common.sql"/>
			  <transaction  src="${common.dir}/AlterTable.sql"/>
			  <transaction  src="${common.dir}/CDE_DummyData_Common.sql"/>
			  <transaction  src="${mysql.dir}/csm_catissuecore.sql"/>
			  <classpath>
	            <fileset dir="${lib.dir}">
	                  <include name="*.jar"/>
	              </fileset>
	            </classpath> 
			</sql>
	  	</target>
		<target name="DBInitialized_Oracle">
		    	<sql
					driver="oracle.jdbc.driver.OracleDriver"
				    url="jdbc:oracle:thin:@miramar.persistent.co.in:1521:chipdb"
				    userid="catissue_core"
				    password="catissue_core" 
		    		onerror="continue">
				  <transaction  src="${oracle.dir}/catissuecore.sql"/>
				  <transaction  src="${oracle.dir}/InitDB_CreateTable.sql"/>
				  <transaction  src="${common.dir}/initDB_Insert_Common.sql"/>
				  <transaction  src="${common.dir}/AlterTable.sql"/>
				  <transaction  src="${common.dir}/CDE_DummyData_Common.sql"/>
				  <transaction  src="${oracle.dir}/CSM_Create_Oracle.sql"/>
		    	  <transaction  src="${oracle.dir}/CSM_InsertData_Oracle.sql"/>	
		   		  <transaction  src="${oracle.dir}/CSM_AddConstraints_Oracle.sql"/>
				  <classpath>
		            <fileset dir="${lib.dir}">
		                  <include name="*.jar"/>
		              </fileset>
		            </classpath> 
				</sql>
		  	</target>
	<!--target name="DBImport" depends="Genrate-Schema">
    	<java classname="edu.wustl.lims.db.DBImportUtil">
    		<classpath refid="eclipse.classpath"/>
            <classpath>
	            <pathelement location="${LIMSPlugin.dir}/lims.jar"/>
            	
            	<fileset dir="${lib.dir}">
                  <include name="*.jar"/>
              </fileset>
            </classpath>       
      	</java>
    </target-->
    
	<!--target name="GenerateDB" depends="DBImport">
    </target-->
      		
    <!--target name="schemaexport">
    	<taskdef name="schemaexport" classname="net.sf.hibernate.tool.hbm2ddl.SchemaExportTask">
	    	<classpath>
		   		<pathelement path="${target.dir}"/>
            	<fileset dir="${lib.dir}">
                	  <include name="*.jar"/>
                	  <include name="*.class"/>
	            </fileset>
    	 	</classpath>       
   		</taskdef>
    
    	<schemaexport properties="hibernate.properties"
        		quiet="yes" text="no" drop="no" delimiter=";" output="schema-export.sql">
        	<fileset dir="./bin">
            	<include name="*.hbm.xml"/>
        	</fileset>
    	</schemaexport>
	</target-->
</project>