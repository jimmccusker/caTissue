Index: sdk-toolkit/software/modules/codegen-templates/templates/dozerParentRefs.javajet
===================================================================
--- sdk-toolkit/software/modules/codegen-templates/templates/dozerParentRefs.javajet	(revision )
+++ sdk-toolkit/software/modules/codegen-templates/templates/dozerParentRefs.javajet	(revision )
@@ -0,0 +1,38 @@
+<%@ jet package="gov.nih.nci.codegen.transformer.jet"
+        class="DozerTransformerParentReferences"
+        skeleton="ClassTransformerBase.skeleton" %>
+# This file tells the 'GenericCollectionConverter.java' class which classes should have their references set to
+# their collections children elements.
+#
+# Example: Class 'edu.wustl.catissuecore.domain.Participant' has a collection member 'raceCollection' which
+# contains elements of type 'edu.wustl.catissuecore.domain.Race' where
+# every Race element in the collection have a member 'participant' of the same type as the class in the example.
+# This utility makes sure that Race will have their 'participant'-s point to the parent 'edu. ... .Participant'
+#
+# If the value is set to 'false' or is removed from this file the Collection will be skipped.
+#
+# edu.wustl.catissuecore.domain.Participant.getRaceCollection=true
+
+<%
+for (UMLClass c:transformerUtils.getAllClasses(model)) {
+    if (c.getAssociations().size() > 0) {
+            for (UMLAssociation association:c.getAssociations()) {
+
+                List<UMLAssociationEnd> assocEnds = association.getAssociationEnds();
+                UMLAssociationEnd thisEnd = transformerUtils.getThisEnd(c, assocEnds);
+                UMLAssociationEnd otherEnd = transformerUtils.getOtherEnd(c, assocEnds);
+
+                UMLClass umlClass = (UMLClass)otherEnd.getUMLElement();
+                String type = umlClass.getName();
+
+                if (transformerUtils.isAssociationEndMany(otherEnd)) {
+                    if (otherEnd.getRoleName() != "") {
+%>
+<%=transformerUtils.getFullPackageName(c)%>.<%=c.getName()%>.get<%=transformerUtils.upperCase(otherEnd.getRoleName())%>=true
+<%
+                    }
+                }
+            }
+    }
+}
+%>
\ No newline at end of file
Index: sdk-toolkit/software/build/build-codegen.xml
===================================================================
--- sdk-toolkit/software/build/build-codegen.xml	(revision 1692)
+++ sdk-toolkit/software/build/build-codegen.xml	(revision )
@@ -478,6 +478,19 @@
 		</jar>
 	</target>
 
+	<target name="-package-dozer-jar" depends="-generate-codegen" description="Prepares Dozer distribution files">
+		<mkdir dir="${output.target.dir}" />
+		<jar destfile="${output.target.dir}\${dozer.file}" basedir="${src.java.dir}">
+			<manifest>
+				<attribute name="Generated-By" value="caCORE SDK Code Generator" />
+				<attribute name="Version" value="${VERSION}" />
+			</manifest>
+			<include name="DozerBeanMapping.xml" />
+			<include name="genericCustomConverterSets.properties" />
+			<include name="genericCustomConverterParentRef.properties" />
+		</jar>
+	</target>
+
 	<target name="-package-xml-jar" depends="-generate-codegen" description="Prepares XML distribution files">
 		<mkdir dir="${output.target.dir}" />
 		<jar destfile="${output.target.dir}\${schema.file}" basedir="${src.java.dir}">
@@ -492,7 +505,7 @@
 		</jar>
 	</target>
 
-	<target name="-package-codegen-artifacts" depends="-package-bean-jar,-package-orm-jar,-package-xml-jar" description="Prepares distribution files">
+	<target name="-package-codegen-artifacts" depends="-package-bean-jar,-package-orm-jar,-package-xml-jar,-package-dozer-jar" description="Prepares distribution files">
 	</target>
 
 
Index: sdk-toolkit/software/workspace/conf/codegen/CodegenConfig-template.xml
===================================================================
--- sdk-toolkit/software/workspace/conf/codegen/CodegenConfig-template.xml	(revision 1692)
+++ sdk-toolkit/software/workspace/conf/codegen/CodegenConfig-template.xml	(revision )
@@ -31,6 +31,9 @@
 				<ref bean="SchemaTransformer"/>	
 				<ref bean="WSDDTransformer"/>
 				<ref bean="CLMLoggerCfgTransformer"/>							
+				<ref bean="DozerTransformer"/>
+				<ref bean="DozerTransformerCollections"/>
+				<ref bean="DozerTransformerParentReferences"/>
 			</list>
 		</constructor-arg>
 	</bean>
@@ -113,6 +116,46 @@
 	<!-- 									 -->
 	<!--  Transformers						 -->
 	<!-- 									 -->
+
+    <bean name="DozerTransformer" class="gov.nih.nci.codegen.transformer.jet.DozerTransformer">
+        <property name="artifactHandler">
+            <bean class="gov.nih.nci.codegen.handler.FileHandler">
+                <property name="useArtifactSource" value="false"/>
+                <property name="outputDir" value="@OUTPUTDIR@"/>
+                <property name="fileName" value="DozerBeanMapping.xml"/>
+            </bean>
+        </property>
+        <property name="enabled" value="@GENERATE_BEANS@"/>
+        <property name="name" value="Bean Transformer"/>
+        <property name="transformerUtils" ref="TransformerUtils"></property>
+    </bean>
+
+    <bean name="DozerTransformerParentReferences" class="gov.nih.nci.codegen.transformer.jet.DozerTransformerParentReferences">
+        <property name="artifactHandler">
+            <bean class="gov.nih.nci.codegen.handler.FileHandler">
+                <property name="useArtifactSource" value="false"/>
+                <property name="outputDir" value="@OUTPUTDIR@"/>
+                <property name="fileName" value="genericCustomConverterParentRef.properties"/>
+            </bean>
+        </property>
+        <property name="enabled" value="@GENERATE_BEANS@"/>
+        <property name="name" value="Bean Transformer"/>
+        <property name="transformerUtils" ref="TransformerUtils"></property>
+    </bean>
+
+    <bean name="DozerTransformerCollections" class="gov.nih.nci.codegen.transformer.jet.DozerTransformerCollections">
+        <property name="artifactHandler">
+            <bean class="gov.nih.nci.codegen.handler.FileHandler">
+                <property name="useArtifactSource" value="false"/>
+                <property name="outputDir" value="@OUTPUTDIR@"/>
+                <property name="fileName" value="genericCustomConverterSets.properties"/>
+            </bean>
+        </property>
+        <property name="enabled" value="@GENERATE_BEANS@"/>
+        <property name="name" value="Bean Transformer"/>
+        <property name="transformerUtils" ref="TransformerUtils"></property>
+    </bean>
+
 	<bean name="HibernateMappingTransformer" class="gov.nih.nci.codegen.transformer.jet.HibernateMappingTransformer">
 		<property name="artifactHandler">
 			<bean class="gov.nih.nci.codegen.handler.FileHandler">
Index: sdk-toolkit/software/modules/codegen-templates/templates/dozer.javajet
===================================================================
--- sdk-toolkit/software/modules/codegen-templates/templates/dozer.javajet	(revision )
+++ sdk-toolkit/software/modules/codegen-templates/templates/dozer.javajet	(revision )
@@ -0,0 +1,60 @@
+<%@ jet package="gov.nih.nci.codegen.transformer.jet"
+        class="DozerTransformer"
+        skeleton="ClassTransformerBase.skeleton" %><?xml version="1.0" encoding="UTF-8"?>
+<mappings xmlns="http://dozer.sourceforge.net"
+          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+          xsi:schemaLocation="http://dozer.sourceforge.net
+          http://dozer.sourceforge.net/schema/beanmapping.xsd">
+
+    <!--
+        GLOBAL CONFIGS
+    -->
+
+    <configuration>
+        <stop-on-errors>true</stop-on-errors>
+        <wildcard>true</wildcard>
+        <trim-strings>false</trim-strings>
+        <bean-factory>edu.wustl.catissuecore.domain.beanfactories.GenericBeanFactory</bean-factory>
+    </configuration>
+
+    <!--
+        DOMAIN CLASSES
+    -->
+
+
+<%
+    for (UMLClass c:transformerUtils.getAllClasses(model)) {
+%>
+<mapping>
+    <class-a><%=transformerUtils.getFQCN(c)%></class-a>
+    <class-b><%=transformerUtils.getFullPackageName(c)%><%=".ws."%><%=c.getName()%></class-b>
+    <field><a>id</a><b>identifier</b></field>
+<%
+
+     if (c.getAssociations().size() > 0) {
+
+            for (UMLAssociation association:c.getAssociations()) {
+                List<UMLAssociationEnd> assocEnds = association.getAssociationEnds();
+                UMLAssociationEnd thisEnd = transformerUtils.getThisEnd(c, assocEnds);
+                UMLAssociationEnd otherEnd = transformerUtils.getOtherEnd(c, assocEnds);
+
+                UMLClass umlClass = (UMLClass)otherEnd.getUMLElement();
+                String type = umlClass.getName();
+
+                if (transformerUtils.isAssociationEndMany(otherEnd)) {
+                    if (otherEnd.getRoleName() != "") {
+%>
+    <field><a><%=otherEnd.getRoleName()%></a><b><%=otherEnd.getRoleName()%>.<%=transformerUtils.lowerCase(type)%></b></field>
+<%
+                }
+                }
+            }
+    }
+%>
+</mapping>
+
+<%
+    }
+%>
+
+</mappings>
Index: sdk-toolkit/software/modules/codegen/src/gov/nih/nci/codegen/util/TransformerUtils.java
===================================================================
--- sdk-toolkit/software/modules/codegen/src/gov/nih/nci/codegen/util/TransformerUtils.java	(revision 1692)
+++ sdk-toolkit/software/modules/codegen/src/gov/nih/nci/codegen/util/TransformerUtils.java	(revision )
@@ -1721,6 +1721,14 @@
 		return getColumnName(table,TV_MAPPED_ELEMENT_COLUMN,getFQCN(klass) +"."+ attr.getName(),false,1,1);
 	}
 
+    public String lowerCase(String s) {
+        return s.substring(0, 1).toLowerCase().concat(s.substring(1));
+    }
+
+    public String upperCase(String s) {
+        return s.substring(0, 1).toUpperCase().concat(s.substring(1));
+    }
+
 	public String getCollectionElementHibernateType(UMLClass klass, UMLAttribute attr) throws GenerationException
 	{
 		String name = getDataType(attr);
Index: sdk-toolkit/software/build/project.properties
===================================================================
--- sdk-toolkit/software/build/project.properties	(revision 1692)
+++ sdk-toolkit/software/build/project.properties	(revision )
@@ -187,6 +187,7 @@
 bean.file=${PROJECT_NAME}-beans.jar
 orm.file=${PROJECT_NAME}-orm.jar
 schema.file=${PROJECT_NAME}-schema.jar
+dozer.file=${PROJECT_NAME}-dozer-files.jar
 
 csm.ehcache.file=csm.ehcache.xml
 csm.security.config.original.file=csm.new.hibernate.cfg.xml
Index: sdk-toolkit/software/modules/codegen-templates/templates/dozerCollections.javajet
===================================================================
--- sdk-toolkit/software/modules/codegen-templates/templates/dozerCollections.javajet	(revision )
+++ sdk-toolkit/software/modules/codegen-templates/templates/dozerCollections.javajet	(revision )
@@ -0,0 +1,35 @@
+<%@ jet package="gov.nih.nci.codegen.transformer.jet"
+        class="DozerTransformerCollections"
+        skeleton="ClassTransformerBase.skeleton" %>
+# This file tells the 'GenericCollectionConverter.java' class how to convert certain collections members
+#
+# Example: Class 'edu.wustl.catissuecore.domain.Participant' has a collection member 'raceCollection' which
+# is of type 'java.util.ArrayList'
+# In order to pass it to caTissue/caCore it needs to be converted into a 'java.util.HashSet' otherwise caTissue/caCore
+# throws error messages.
+#
+# edu.wustl.catissuecore.domain.OrderDetails.getOrderItemCollection=java.util.HashSet
+
+<%
+for (UMLClass c:transformerUtils.getAllClasses(model)) {
+    if (c.getAssociations().size() > 0) {
+            for (UMLAssociation association:c.getAssociations()) {
+
+                List<UMLAssociationEnd> assocEnds = association.getAssociationEnds();
+                UMLAssociationEnd thisEnd = transformerUtils.getThisEnd(c, assocEnds);
+                UMLAssociationEnd otherEnd = transformerUtils.getOtherEnd(c, assocEnds);
+
+                UMLClass umlClass = (UMLClass)otherEnd.getUMLElement();
+                String type = umlClass.getName();
+
+                if (transformerUtils.isAssociationEndMany(otherEnd)) {
+                    if (otherEnd.getRoleName() != "") {
+%>
+<%=transformerUtils.getFullPackageName(c)%>.<%=c.getName()%>.get<%=transformerUtils.upperCase(otherEnd.getRoleName())%>=java.util.HashSet
+<%
+                    }
+                }
+            }
+    }
+}
+%>
\ No newline at end of file
