<%@ jet package="gov.nih.nci.codegen.transformer.jet"
        class="DozerTransformerParentReferences"
        skeleton="ClassTransformerBase.skeleton" %>
# This file tells the 'GenericCollectionConverter.java' class which classes should have their references set to
# their collections children elements.
#
# Example: Class 'edu.wustl.catissuecore.domain.Participant' has a collection member 'raceCollection' which
# contains elements of type 'edu.wustl.catissuecore.domain.Race' where
# every Race element in the collection have a member 'participant' of the same type as the class in the example.
# This utility makes sure that Race will have their 'participant'-s point to the parent 'edu. ... .Participant'
#
# If the value is set to 'false' or is removed from this file the Collection will be skipped.
#
# edu.wustl.catissuecore.domain.Participant.getRaceCollection=true

<%
for (UMLClass c:transformerUtils.getAllClasses(model)) {
    if (c.getAssociations().size() > 0) {
            for (UMLAssociation association:c.getAssociations()) {

                List<UMLAssociationEnd> assocEnds = association.getAssociationEnds();
                UMLAssociationEnd thisEnd = transformerUtils.getThisEnd(c, assocEnds);
                UMLAssociationEnd otherEnd = transformerUtils.getOtherEnd(c, assocEnds);

                UMLClass umlClass = (UMLClass)otherEnd.getUMLElement();
                String type = umlClass.getName();

                if (transformerUtils.isAssociationEndMany(otherEnd)) {
                    if (otherEnd.getRoleName() != "") {
%>
<%=transformerUtils.getFullPackageName(c)%>.<%=c.getName()%>.get<%=transformerUtils.upperCase(otherEnd.getRoleName())%>=true
<%
                    }
                }
            }
    }
}
%>