<?xml version ="1.0"?>
<!--Ant Script for create Build for caTISSUE Core-->
<project name="caTissue Suite" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">

	<exec executable="svnversion" outputproperty="dist.revision">
       <arg line="-n ."/>
    </exec>

	<!--define require dir and Properties -->
	<property name="root.dir" location="${base.dir}/../../.." />
	<property name="software.dir" value="${root.dir}/software" />

	<property name="jboss.conf.dir" value="${root.dir}/software/caTissue/common/resources/jboss-conf" />
	<property name="common.dir" location="${software.dir}/caTissue/common" />
	<property name="docs.dir" location="${root.dir}/docs" />
	<property name="tools.dir" location="${root.dir}/tools" />
	<property name="target.dir" value="${root.dir}/software/target" />
	<property name="caTissue_lib.dir" value="${target.dir}/lib/caTissue_lib" />
	<property name="compile.lib.dir" value="${caTissue_lib.dir}/compile_lib" />
	<property name="de_integration_client_lib.dir" value="${caTissue_lib.dir}/de_integration_client_lib" />
	<property name="extra_lib.dir" value="${caTissue_lib.dir}/extra_lib" />
	<property name="taskdef_lib.dir" value="${caTissue_lib.dir}/taskdef_lib" />
	<!--<property name="third_party_lib.dir" value="${caTissue_lib.dir}/third_party_lib" />
	<property name="third_party_flex_lib.dir" value="${caTissue_lib.dir}/third_party_flex_lib" /> -->
	<property name="src_lib.dir" value="${caTissue_lib.dir}/src_lib" />
	<property name="caTissueSuite_Client_lib.dir" value="${caTissue_lib.dir}/caTissueSuite_Client_lib" />
	<property name="web_inf_lib.dir" value="${caTissue_lib.dir}/web_inf_lib" />

	<!--<property name="common_lib.dir" value="${caTissue_lib.dir}/common_lib" />-->
	<property name="common.lib.dir" value="${caTissue_lib.dir}/common_lib" />
	<property name="private_public_migrator_lib.dir" value="${caTissue_lib.dir}/private_public_migrator_lib" />
	<property name="caTissue_Print_Web_Service_lib.dir" value="${caTissue_lib.dir}/caTissue_Print_Web_Service_lib" />
	<property name="Applet_lib.dir" value="${caTissue_lib.dir}/Applet_lib" />
	<property name="cacore_resources_lib.dir" value="${caTissue_lib.dir}/cacore_resources_lib" />
	<property name="flex_jar.dir" value="${caTissue_lib.dir}/flex_jar" />
	<property name="CaTissue_TestCases_lib.dir" value="${caTissue_lib.dir}/CaTissue_TestCases_lib" />
	<property name="cobertura_lib.dir" value="${caTissue_lib.dir}/cobertura_lib" />
	<property name="temp.dir" value="${target.dir}/temp" />
	<property name="classes.dir" value="${temp.dir}/WEB-INF/classes" />
	<property name="target.lib.dir" value="${root.dir}/software/target/lib" />
	<property name="project.properties.file" value="${software.dir}/caTissue/build/project.properties" />
	<property name="install.properties.file" value="${software.dir}/caTissue/build/install.properties" />
	<property file="${install.properties.file}" />
	<property file="${project.properties.file}" />
	<property file="JMeterTest.properties" />

    <property name="base.dir" value="." />
    <property name="catissue.modules" value="${base.dir}/modules" />
	<property name="conf.dir" value="${catissue.modules}/core/conf" />
	<property name="resources.dir" value="${catissue.modules}/core/src/main/resources" />
	<property name="catissue.java" value="${base.dir}/src/java" />
	<property name="catissue.test" value="${catissue.modules}/tests" />
	<property name="catissue.web" value="${catissue.modules}/core/src/main/web" />
	<property name="src.dir" value="${catissue.modules}/core/src/main/java" />

    <property name="lib.dir" value="${web_inf_lib.dir}" />
	<property name="applet.dir" value="${catissue.web}/Applet" />
	<property name="dagviewapplet.dir" value="${applet.dir}/DagViewApplet" />
	<property name="hbm.dir" value="${src.dir}/edu/wustl/catissuecore/hbm" />
	<property name="generateforce" value="true" />
	<property name="junit.jar" value="${lib.dir}/junit-4.1.jar" />
	<property name="cobertura.dir" value="${classes.dir}/reports/coverage" />
	<property name="catissue.applet.dir" value="${catissue.web}/Applet/catissue" />
	<property name="cacore.client.dir" value="${catissue.test}/unit/caTissueSuite_Client" />
	<property name="test.src.dir" value="${cacore.client.dir}/src/edu/wustl/catissuecore/api/testcases" />
	<property name="test.class.dir" value="${catissue.test}/unit/caTissueSuite_Client/classes" />
	<property name="report.dir" value="${cacore.client.dir}/nightly_build_report" />

	<!-- csm related properties -->
	<property name="tempCatissuecore.dir" value="${temp.dir}/tempCatissuecore" />
	<property name="oracle.dialect.h3.string" value="org.hibernate.dialect.Oracle9Dialect" />
	<property name="mysql.dialect.h3.string" value="org.hibernate.dialect.MySQLDialect" />
	<property name="client.dir" value="${base.dir}/caTissueSuite_Client" />
	<property name="project.src.domain" value="${catissue.modules}/core/src/main/java/edu/wustl/catissuecore/domain/" />
	<property name="custom.impl.lib.dir" value="${temp.dir}/custom_impl_lib" />

	<import file="${conf.dir}/build-properties.xml" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${taskdef_lib.dir}/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<property name="bda-utils.dir" location="${target.dir}/bda-utils" />
	<path id="bda-utils.classpath">
		<fileset dir="${bda-utils.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="ivy.classpath">
		<fileset dir="${target.dir}/lib">
			<include name="ivy-2.0.0.jar" />
		</fileset>
	</path>

	<import file="${bda-utils.dir}/bda-build-utils-${bda.version}.xml" />

	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.classpath" />
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpathref="bda-utils.classpath" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="bda-utils.classpath" />

	<!-- flex related properties -->
	<property name="FLEX_HOME" value="E:/Flex SDK 2" />
	<property name="FLEX_APP_ROOT" value="flexclient" />
	<property name="flex.dir" value="${catissue.web}/WEB-INF/flex" />
	<!-- flex related properties finish -->

	<path id="app.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="junit.classpath">
		<pathelement location="${junit.jar}" />
		<pathelement location="${target.dir}" />
		<pathelement location="${base.dir}/cobertura/lib/cobertura.jar" />
		<pathelement location="${base.dir}/cobertura/lib/jakarta-oro-2.0.8.jar" />
		<pathelement location="${base.dir}/cobertura/lib/asm-2.2.1.jar" />

		<path refid="app.classpath" />
	</path>

	<!-- sub tasks -->
	<target name="init" description="initialize">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${classes.dir}" />
		<!-- Create the temp directory for caCORE CSM war file-->
		<mkdir dir="${tempCatissuecore.dir}" />
	</target>
	<target name="Catissue_Cdms_Client_Integration" description="Creates a caTissue CDMS integration jar">
		<delete file="${temp.dir}/caTissueCdmsIntegration.jar" />
		<jar destfile="${temp.dir}/caTissueCdmsIntegration.jar">
			<fileset dir="${classes.dir}">
				<include name="**/ICatissueCdmsIntegrator.class" />
				<include name="**/CatissueCdmsIntegrator.class" />
				<include name="**/CatissueCdmsURLInformationObject.class" />
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>
	<target name="Label_BarCode_Generator_Client">
		<delete file="${temp.dir}/label_barcode_gen_client.jar" />
		<jar destfile="${temp.dir}/label_barcode_gen_client.jar">
			<fileset dir="${classes.dir}">
				<include name="**/LabelGenerator.class" />
				<include name="**/LabelGeneratorFactory.class" />
				<include name="**/BarcodeGenerator.class" />
				<include name="**/BarcodeGeneratorFactory.class" />
				<include name="**/LabelTokens.class" />
				<include name="**/TokenFactory.class" />
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>
	<target name="Default_Label_BarCode_Generator" depends="Label_BarCode_Generator_Client,build_client_jar">
		<delete file="${temp.dir}/Default_label_barcode_gen.jar" />
		<jar destfile="${temp.dir}/Default_label_barcode_gen.jar">
			<fileset dir="${classes.dir}">
				<include name="**/namegenerator/*" />

				<exclude name="**/LabelGenerator.class" />
				<exclude name="**/LabelGeneratorFactory.class" />
				<exclude name="**/BarcodeGenerator.class" />
				<exclude name="**/BarcodeGeneratorFactory.class" />
				<exclude name="**/LabelTokens.class" />
				<exclude name="**/TokenFactory.class" />
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>
	<target name="PrintService_Client">
		<delete file="${temp.dir}/printservice_client.jar" />
		<jar destfile="${temp.dir}/printservice_client.jar">
			<fileset dir="${classes.dir}">
				<include name="**/LabelPrinter.class" />
				<include name="**/LabelPrinterFactory.class" />
				<include name="**/PropertyHandler.class" />
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>
	<target name="PrintService_Module" depends="PrintService_Client,build_client_jar">
		<delete file="${temp.dir}/printservice_module.jar" />
		<jar destfile="${temp.dir}/printservice_module.jar">
			<fileset dir="${classes.dir}">
				<include name="**/printservicemodule/*" />
				<exclude name="**/printservicemodule/PrintServiceImplementor.properties" />
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="clean" description="clean up">
		<delete includeemptydirs="true">
			<fileset dir="${classes.dir}">
				<include name="**/*" />
				<exclude name="CVS" />
			</fileset>
		</delete>
	</target>

	<!-- IVY related targets start here -->
	<property name="ivy.settings.file" location="${common.dir}/ivy/cbiit-ivy-settings.xml" />
	<target name="ivy-settings">
		<property name="ivy.dep.file" value="${common.dir}/bda-download/ivy-bda.xml" />
		<ivy:settings file="${ivy.settings.file}" />
	</target>
	<target name="retrieve-ivy-files" depends="ivy-settings" description="Updates the local ivy repository">
		<antcall target="retrieve-limpopo-ivy-files" />
		<antcall target="retrieve-subproject-jars-zips" />
		<antcall target="retrieve-aq" />
		<antcall target="retrieve-bo" />
		<antcall target="retrieve-client-lib-ivy-files" />
		<antcall target="retrieve-compile-ivy-files" />
		<antcall target="retrieve-common-ivy-files" />
		<antcall target="retrieve-de" />
		<antcall target="retrieve-de-integration-ivy-files" />
		<antcall target="retrieve-extra-lib-ivy-files" />
		<antcall target="retrieve-idp" />
		<antcall target="retrieve-pm" />
		<antcall target="retrieve-ppm-ivy-files" />
		<antcall target="retrieve-printWebService-ivy-files" />
		<antcall target="retrieve-src-lib-ivy-files" />
		<antcall target="retrieve-taskdef-lib-ivy-files" />
		<!--<antcall target="retrieve-third-party-flex-lib-ivy-files" />
		<antcall target="retrieve-third-party-lib-ivy-files" /> -->
		<antcall target="retrieve-cacore-resources-lib-ivy-files" />
		<antcall target="retrieve-flex-jar-ivy-files" />
		<antcall target="retrieve-CaTissue-TestCases-lib-ivy-files" />
		<antcall target="retrieve-cobertura-lib-ivy-files" />
		<antcall target="retrieve-Applet-lib-ivy-files" />
		<antcall target="copy" />
	</target>

	<target name="retrieve-limpopo-ivy-files" depends="ivy-settings" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="limpopo" />
		<ivy:retrieve type="jar" pattern="${web_inf_lib.dir}/[artifact]-[revision].[ext]" conf="limpopo" />
	</target>
	<target name="retrieve-subproject-jars-zips" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="app_lib" />
		<ivy:retrieve pattern="${compile.lib.dir}/[artifact]-[revision].[ext]" conf="app_lib" />
	</target>
	<target name="retrieve-aq" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="aq" />
		<ivy:retrieve pattern="${compile.lib.dir}/[artifact].[ext]" conf="aq" />
	</target>
	<target name="retrieve-bo" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="bo" />
		<ivy:retrieve pattern="${compile.lib.dir}/[artifact].[ext]" conf="bo" />
	</target>
	<target name="retrieve-de" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="de" />
		<ivy:retrieve pattern="${compile.lib.dir}/[artifact].[ext]" conf="de" />
	</target>
	<target name="retrieve-pm" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="pm" />
		<ivy:retrieve pattern="${compile.lib.dir}/[artifact].[ext]" conf="pm" />
	</target>
	<target name="retrieve-idp" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="idp" />
		<ivy:retrieve pattern="${compile.lib.dir}/[artifact][revision].[ext]" conf="idp" />
	</target>
	<target name="retrieve-de-integration-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="de-integration-client-lib" />
		<ivy:retrieve pattern="${de_integration_client_lib.dir}/[artifact].[ext]" conf="de-integration-client-lib" />
	</target>
	<target name="retrieve-extra-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="extra_lib" />
		<ivy:retrieve pattern="${extra_lib.dir}/[artifact].[ext]" conf="extra_lib" />
	</target>
	<target name="retrieve-taskdef-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="taskdef_lib" />
		<ivy:retrieve pattern="${taskdef_lib.dir}/[artifact].[ext]" conf="taskdef_lib" />
	</target>
	<!--<target name="retrieve-third-party-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="third_party_lib" />
		<ivy:retrieve pattern="${third_party_lib.dir}/[artifact].[ext]" conf="third_party_lib" />
	</target>
	<target name="retrieve-third-party-flex-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="third_party_flex_lib" />
		<ivy:retrieve pattern="${third_party_flex_lib.dir}/[artifact].[ext]" conf="third_party_flex_lib" />
	</target> -->
	<target name="retrieve-src-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="src_lib" />
		<ivy:retrieve pattern="${src_lib.dir}/[artifact].[ext]" conf="src_lib" />
	</target>
	<target name="retrieve-client-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="src_lib" />
		<ivy:retrieve pattern="${caTissueSuite_Client_lib.dir}/[artifact].[ext]" conf="caTissueSuite_Client_lib" />
	</target>
	<target name="retrieve-compile-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="web-inf" />
		<ivy:retrieve pattern="${web_inf_lib.dir}/[artifact].[ext]" conf="web-inf" />
	</target>
	<target name="retrieve-common-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="common_lib" />
		<ivy:retrieve pattern="${common.lib.dir}/[artifact].[ext]" conf="common_lib" />
	</target>
	<target name="retrieve-ppm-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="private_public_migrator" />
		<ivy:retrieve pattern="${private_public_migrator_lib.dir}/[artifact].[ext]" conf="private_public_migrator" />
	</target>
	<target name="retrieve-printWebService-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="caTissuePrintWebService" />
		<ivy:retrieve pattern="${caTissue_Print_Web_Service_lib.dir}/[artifact].[ext]" conf="caTissuePrintWebService" />
	</target>
	<target name="retrieve-cacore-resources-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="cacore_resources_lib" />
		<ivy:retrieve pattern="${cacore_resources_lib.dir}/[artifact].[ext]" conf="cacore_resources_lib" />
	</target>
	<target name="retrieve-flex-jar-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="flex_jar" />
		<ivy:retrieve pattern="${flex_jar.dir}/WEB-INF/flex/jars/[artifact].[ext]" conf="flex_jar" />
	</target>
	<target name="retrieve-CaTissue-TestCases-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="CaTissue_TestCases_lib" />
		<ivy:retrieve pattern="${CaTissue_TestCases_lib.dir}/[artifact].[ext]" conf="CaTissue_TestCases_lib" />
	</target>
	<target name="retrieve-cobertura-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="cobertura_lib" />
		<ivy:retrieve pattern="${cobertura_lib.dir}/[artifact].[ext]" conf="cobertura_lib" />
	</target>
	<target name="retrieve-Applet-lib-ivy-files" depends="ivy-settings">
		<ivy:resolve refresh="true" conf="Applet_lib" />
		<ivy:retrieve pattern="${Applet_lib.dir}/Applet/[artifact].[ext]" conf="Applet_lib" />
	</target>
	<!-- IVY related targets end here -->

	<!-- Compile all files, generated and hand-written -->
	<target name="compile" depends="init,retrieve-ivy-files">
		<javac destdir="${classes.dir}" includes="**/*.*" includeAntRuntime="false" debug="yes" target="1.6">
			<src path="${src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${common.lib.dir}">
					<include name="*.jar" />
				</fileset>
				<pathelement location="${ant.home}\lib\ant.jar" />
			</classpath>
			<!--BDA compile must not need cobertura libs <classpath refid="cobertura.classpath" /> -->
		</javac>
		<copy todir="${classes.dir}" overwrite="true">
			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
			</fileset>
		</copy>
	</target>

	<!-- Create the Applet JAR Ends-->

	<!-- Creates the WAR (Web Application Archive) file of the application -->
	<target name="build_war" depends="init, unpack_cacore_war, compile, build_client_jar, replace_database_type, common_build_war" />

	<!--
		Create war file for installable zip file.Please us this target when creating installable zip. Note: database type is not replaced
	-->
	<target name="installable_build_war" depends="init,unpack_cacore_war,compile, common_build_war,build_client_jar" />

	<!-- build catissuecore war file which is common to above both targets -->
	<target name="common_build_war" depends="Default_Label_BarCode_Generator,Catissue_Cdms_Client_Integration,PrintService_Module,create_war" />

	<!--Start of Integrating the Bulk Operation Module  -->
	<target name="ivy-retrieve-dao" depends="ivy-settings" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="app_lib" />
		<ivy:retrieve pattern="${lib.dir}/[conf]/[artifact]-[revision].[ext]" conf="app_lib" />
	</target>
	<target name="integrate_bulk_operation" description="Start of Integrating the Bulk Operation Module">
		<echo>Integrating the Bulk Operation Module</echo>
		<antcall target="unzip_bulkoperation_installable" />
		<ant dir="${base.dir}/bulkoperation" inheritAll="false" antfile="bulkoperationintegration.xml" target="bulkoperation_integrate_app">
			<property name="deploy.temp.dir" value="${temp.dir}/bulkoperation" />
			<property name="temp.classes.dir" value="${classes.dir}" />
			<property name="bulkoperation.base.dir" value="${basedir}/bulkoperation" />
			<property name="config.dir" value="${dist.dir}/modules/bulk_operations/conf" />
		</ant>
	</target>

	<target name="unzip_bulkoperation_installable" depends="bulkoperation_check_prerequisite" description="unzip the bulk operation zip">
		<unzip src="${target.dir}/dist/bulkoperator.zip" dest="${basedir}/bulkoperation" overwrite="true" />
	</target>

    <target name="bulkoperation_check_prerequisite" description="Check bulkoperation.zip file exists or not in base directory">
		<!-- Check bulkoperation.zip file exists or not in base	directory. -->
		<available file="${base.dir}/bulkoperator.zip" property="file.exists" value="false" />
		<if>
			<not>
				<isset property="file.exists" />
			</not>
			<then>
				<echo message="bulkoperation.zip file not found. It should be in base directory to deploy Bulk Operation." level="error" />
			</then>
			<else>
				<echo message="Bulk Operation is ready to use." />
			</else>
		</if>
	</target>
	<!--End of Integrating the Bulk Operation Module  -->

	<target name="create_war">
		<delete file="${target.dir}/dist/catissuecore.war" />
		<copy todir="${temp.dir}/bulkoperation/src/java/WEB-INF" file="${catissue.web}/WEB-INF/struts-config.xml" />
		<copy todir="${temp.dir}/bulkoperation/src/java/WEB-INF" file="${catissue.web}/WEB-INF/web.xml" />

		<antcall target="integrate_bulk_operation" />

		<copy todir="${web_inf_lib.dir}" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="Default_label_barcode_gen.jar" />
				<include name="label_barcode_gen_client.jar" />
				<include name="printservice_client.jar" />
				<include name="printservice_module.jar" />
				<include name="caTissueCdmsIntegration.jar" />
			</fileset>
			<fileset dir="${cacore_resources_lib.dir}">
				<include name="jboss-client.jar" />
			</fileset>
		</copy>
		<delete file="caTissueCdmsIntegration.jar" />
		<delete file="${temp.dir}/MANIFEST.MF" />
		<manifest file="${temp.dir}/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Version" value="${application.name} ${application.version}" />
			<attribute name="CSM-Version" value="${csm.version}" />
			<attribute name="caCore-Version" value="${cacore.version}" />
			<attribute name="Build-on" value="${TODAY}" />
			<attribute name="SVN-URL" value="${dist.revision}" />
		</manifest>
		<replace dir="${classes.dir}">
			<include name="log4j.properties" />
			<replacefilter token="@@jbosshome@@" value="${jboss.server.url}" />
		</replace>
		<antcall target="copydeletedjars">
			<param name="deleteFromDir" value="${temp.dir}/WEB-INF/lib" />
		</antcall>
		<antcall target="copydeletedjars">
			<param name="deleteFromDir" value="${tempCatissuecore.dir}/catissue_cacore" />
		</antcall>

		<war destfile="${target.dir}/dist/catissuecore.war" webxml="${catissue.web}/WEB-INF/web.xml" duplicate="preserve" manifest="${temp.dir}/MANIFEST.MF">
			<fileset dir="${temp.dir}/bulkoperation/src/web">
				<include name="**/pages/**" />
				<include name="**/jss/**" />
				<include name="**/css/**" />
				<exclude name="**/css/catissue_suite.css" />
			</fileset>

			<fileset dir="${catissue.web}">
				<include name="css/**" />
				<include name="images/**" />
				<include name="jss/**" />
				<include name="dhtml_comp/**" />
				<include name="pages/**" />
				<include name="runtime/**" />
				<include name="newDhtmlx/**" />
                <include name="WEB-INF/**" />
                <exclude name="**/WEB-INF/web.xml" />
                <exclude name="**/WEB-INF/struts-config.xml" />
			</fileset>
<!--
			<fileset dir="${catissue.java}">
				<include name="WEB-INF/**" />
				<exclude name="**/WEB-INF/web.xml" />
				<exclude name="**/WEB-INF/struts-config.xml" />
			</fileset>
-->
			<fileset dir="${catissue.modules}">
				<include name="flexclient/**" />
			</fileset>

			<fileset dir="${flex_jar.dir}">
				<include name="WEB-INF/**" />
			</fileset>

			<fileset dir="${Applet_lib.dir}">
				<include name="Applet/**" />
			</fileset>

			<lib dir="${web_inf_lib.dir}">
				<exclude name="*.zip" />
				<exclude name="ant*.jar" />
				<exclude name="junit*.jar" />
				<exclude name="jta.jar" />
				<exclude name="acegi-security-1.0.4.jar" />
				<exclude name="addressing-1.0.jar" />
				<exclude name="antlr-2.7.6.jar" />
				<exclude name="axis-url.jar" />
				<exclude name="axis.jar" />
				<exclude name="caGrid-ServiceSecurityProvider-client-1.3.jar" />
				<exclude name="caGrid-ServiceSecurityProvider-common-1.3.jar" />
				<exclude name="caGrid-ServiceSecurityProvider-service-1.3.jar" />
				<exclude name="caGrid-ServiceSecurityProvider-stubs-1.3.jar" />
				<exclude name="caGrid-authentication-service-client-1.3.jar" />
				<exclude name="caGrid-authentication-service-common-1.3.jar" />
				<exclude name="caGrid-authentication-service-stubs-1.3.jar" />
				<exclude name="caGrid-core-1.3.jar" />
				<exclude name="caGrid-dorian-client-1.3.jar" />
				<exclude name="caGrid-dorian-common-1.3.jar" />
				<exclude name="caGrid-dorian-stubs-1.3.jar" />
				<exclude name="caGrid-gaards-core-1.3.jar" />
				<exclude name="caGrid-gts-client-1.3.jar" />
				<exclude name="caGrid-gts-common-1.3.jar" />
				<exclude name="caGrid-gts-stubs-1.3.jar" />
				<exclude name="caGrid-metadata-common-1.3.jar" />
				<exclude name="caGrid-metadata-security-1.3.jar" />
				<exclude name="caGrid-opensaml-1.3.jar" />
				<exclude name="caGrid-syncgts-client-1.3.jar" />
				<exclude name="caGrid-syncgts-common-1.3.jar" />
				<exclude name="caGrid-syncgts-stubs-1.3.jar" />
				<exclude name="clm.jar" />
				<exclude name="cog-axis.jar" />
				<exclude name="cog-url.jar" />
				<exclude name="commons-collections-3.2.jar" />
				<exclude name="commons-discovery-0.2.jar" />
				<exclude name="commons-httpclient-3.0.1.jar" />
				<exclude name="ehcache-1.2.4.jar" />
				<exclude name="globus_resolution_stubs_java.jar" />
				<exclude name="globus_transfer_stubs_java.jar" />
				<exclude name="hibernate3.jar" />
				<exclude name="jaxrpc.jar" />
				<exclude name="jboss-client.jar" />
				<exclude name="jdom-1.1.jar" />
				<exclude name="mobius_common_client-1.1.jar" />
				<exclude name="mysql-connector-java-5.0.8-bin.jar" />
				<exclude name="ojdbc14.jar" />
				<exclude name="wsrf_core.jar" />
				<exclude name="wsrf_core_stubs.jar" />
			</lib>

			<fileset dir="${temp.dir}">
				<include name="WEB-INF/**" />
			</fileset>

            <fileset dir="${resources.dir}">
                <include name="caTissueSuiteV11_UML.zip" />
            </fileset>

            <fileset dir="${base.dir}">
				<include name="css/**" />
				<include name="images/**" />
				<include name="jss/**" />
				<include name="dhtml_comp/**" />
				<include name="pages/**" />
				<include name="runtime/**" />
				<include name="caTissue_Suite_User_Manual.pdf" />
				<include name="caTissue_Suite_User_Manual.doc" />
				<include name="caTissueSuite_v1_2_Technical_Guide.doc" />
				<include name="**/WEB-INF/classes/**/cdms/CdmsIntegratorImpl.class" />

				<exclude name="**/WEB-INF/classes/**/namegenerator/*" />
				<exclude name="**/WEB-INF/classes/**/cdms/*" />
				<exclude name="**/pages/subMenu/**" />
				<exclude name="**/log4j.properties" />
				<exclude name="**/*servlet.jar*" />
				<exclude name="**/jsp.jar" />
				<exclude name="**/*hibernate2.jar*" />
				<exclude name="**/*jta.jar*" />
				<exclude name="**/CVS*" />
			</fileset>

            <fileset dir="${conf.dir}">
				<include name="CDEConfig.xml" />
				<include name="CDEConfig.xsd" />
				<include name="ApplicationVersionInfo.txt" />
				<include name="client-config.wsdd" />
			</fileset>

			<fileset dir="${temp.dir}/bulkoperation/src/java">
				<include name="WEB-INF/struts-config.xml" />
				<include name="WEB-INF/web.xml" />
				<include name="WEB-INF/bulkoperation-struts-config.xml" />
			</fileset>

			<!-- change for csm related war -->
			<fileset dir="${tempCatissuecore.dir}/catissue_cacore">
				<include name="**/WEB-INF/**" />
				<include name="**/images/**" />
				<include name="**/log/**" />
				<include name="**/*" />

				<exclude name="**/WEB-INF/web.xml" />
				<exclude name="**/WEB-INF/classes/edu/wustl/catissuecore/domain/**" />
				<exclude name="**/WEB-INF/lib/csmapi.jar" />
				<exclude name="**/WEB-INF/lib/dom4*.jar" />
				<exclude name="**/WEB-INF/lib/jta.jar" />
				<exclude name="**/WEB-INF/lib/cglib*.jar" />
				<exclude name="**/META-INF/**" />
				<exclude name="Happy.jsp" />
				<exclude name="Criteria.jsp" />
				<exclude name="**/WEB-INF/classes/ApplicationSecurityConfig.xml" />
				<exclude name="**/WEB-INF/lib/dom4j-1.4.jar" />
				<exclude name="**/WEB-INF/lib/acegi-security-1.0.4.jar" />
				<exclude name="**/WEB-INF/lib/antlr-2.7.6.jar" />
				<exclude name="**/WEB-INF/lib/commons-collections-3.2.jar" />
				<exclude name="**/WEB-INF/lib/commons-discovery-0.2.jar" />
				<exclude name="**/WEB-INF/lib/ehcache-1.2.4.jar" />
				<exclude name="**/WEB-INF/lib/jdom-1.1.jar" />
				<exclude name="**/WEB-INF/lib/xalan*.jar" />
			</fileset>
		</war>
	</target>

	<target name="copydeletedjars">
		<echo>deleting unneccesary jars from ${deleteFromDir}</echo>
		<delete failonerror="false">
			<fileset dir="${deleteFromDir}">
				<include name="backport-util-concurrent-3.0.jar" />
				<!--<include name="c3p0-0.8.4.5.jar" />
				<include name="c3p0-0.8.5.2.jar" />
				<include name="c3p0*.jar"/>-->
				<include name="castor-1.0.2.jar" />
				<!--<include name="cglib-2.1.jar" />
				<include name="commons-collections-2.1.1.jar" />
				<include name="commons-collections-3.1.jar" />
				<include name="commons-collections*.jar"/>
				<include name="commons-discovery-0.2.jar" />-->
				<!--<include name="commons-fileupload.jar" />
				<include name="commons-fileupload*.jar"/>-->
				<include name="commons-lang-2.1.jar" />
				<!--<include name="commons-logging-1.0.4.jar" />
				<include name="commons-logging*.jar"/>-->
				<include name="dom4*.jar" />
				<!--<include name="ehcache-1.2.3.jar" />
				<include name="ehcache*.jar"/>-->
				<include name="freemarker.jar" />
				<include name="jakarta-oro.jar" />
				<include name="uml-1.3.jar" />
				<include name="wsdl4j-1.5.1.jar" />
				<!--<include name="xalan-2.4.0.jar" />-->
				<include name="xalan*.jar" />
				<include name="xercesImpl*.jar" />
				<include name="p6spy.jar" />
				<include name="uuid-key-generator.jar" />
				<!--<include name="wsdl4j.jar" />-->
				<include name="j2ee.jar" />
				<include name="caGrid-1.0-caDSR-client.jar" />
				<include name="caGrid-1.0-caDSR-common.jar" />
				<include name="caGrid-1.0-caDSR-stubs.jar" />
				<include name="caGrid-1.0-core.jar" />
				<include name="caGrid-1.0-data-common.jar" />
				<include name="caGrid-1.0-data-stubs.jar" />
				<include name="caGrid-1.0-data-utils.jar" />
				<include name="caGrid-1.0-fqp-client.jar" />
				<include name="caGrid-1.0-fqp-common.jar" />
				<include name="caGrid-1.0-fqp-stubs.jar" />
				<include name="caGrid-1.0-metadata-common.jar" />
				<include name="caGrid-1.0-metadata-security.jar" />
				<include name="caGrid-1.0-ServiceSecurityProvider-client.jar" />
				<include name="caGrid-1.0-ServiceSecurityProvider-common.jar" />
				<include name="jboss-common-jdbc-wrapper.jar" />
				<!--<include name="mysql-connector-java-3.1.13-bin.jar" />-->
				<include name="boot.jar" />
				<include name="c3p0-0.9.0.jar" />
				<include name="catissuecore.jar" />
				<include name="experiment-client.jar" />
				<include name="junit-4.1.jar" />
				<include name="mockobjects-core-0.09.jar" />
				<include name="openide-util.jar" />

				<!-- removed to work printwebservice -->
				<include name="jaxrpc.jar" />
				<include name="saaj.jar" />
				<include name="jboss-jaxws.jar" />
				<include name="catissue_cacore-orm.jar" />

				<!-- removed for SDK 4.2 changes-->
				<include name="sdk-grid-jaas*.jar" />
			</fileset>
		</delete>
	</target>
	<target name="clean_temp_dir_csmwar" description="delete temp directory used for caCORE unpack">
		<delete dir="${tempCatissuecore.dir}" />
		<delete file="${jboss.server.url}/deploy/catissue_cacore.war" />
	</target>

	<!--Deploys the application war file at JBOSS server by coping it to deploy directory of application server-->
	<target name="deploy">
        <antcall target="compile" />
		<antcall target="create_war" />
		<copy file="${target.dir}/dist/catissuecore.war" todir="${jboss.server.url}/deploy" />
		<copy file="${conf.dir}/caTissuePrintWebService.war" todir="${jboss.server.url}/deploy" />
		<sleep seconds="2" />
	</target>

	<target name="createJavaDoc">
		<javadoc destdir="${temp.dir}/${client.dir}/JavaDoc" author="true" version="true" use="true" windowtitle="JavaDoc">
			<fileset dir="${project.src.domain}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>

<!--

	<target name="create_zip_old" depends="createJavaDoc,installable_build_war">
		<property name="zip.dir" value="${dist.dir}" />
		<property name="zip.file" value="${base.dir}/caTissue_Suite_v${application.version}_Installable.zip" />

		<copy file="catissuecore.war" todir="${zip.dir}" overwrite="true" />
		<copy file="${temp.dir}/label_barcode_gen_client.jar" todir="${zip.dir}" overwrite="true" />
		<copy file="${temp.dir}/printservice_module.jar" todir="${zip.dir}" overwrite="true" />
		<copy file="${temp.dir}/printservice_client.jar" todir="${zip.dir}" overwrite="true" />
		<copy file="${web_inf_lib.dir}/PrintCatissueCore_Client.jar" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/caTissuePrintWebService.war" todir="${zip.dir}" overwrite="true" />
		<copy file="dynamicextensions.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="clientFormCreator.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="AdvanceQuery_Installable.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="bulkoperator.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/bulkOperation.properties" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/Show_Hide_Forms.csv" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/Show_Hide_Forms.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${temp.dir}/MANIFEST.MF" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/deploy.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/DEDeploy.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/login-config.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/properties-service.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/taggedvalues.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/paths.txt" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/cas.war" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/sync-description.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/sync-description-ctrp.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/sync-description-gridgrouper.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/magetab.idf" todir="${zip.dir}" overwrite="true" />
		<copy todir="${zip.dir}/custom_impl_lib" overwrite="true">
			<fileset file="${temp.dir}/Default_label_barcode_gen.jar" />
			<fileset file="${temp.dir}/label_barcode_gen_client.jar" />
			<fileset file="${compile.lib.dir}/IDPAuthenticationManager0_0.jar" />
		</copy>
		<copy todir="${zip.dir}/idp" overwrite="true">
			<fileset dir="${conf.dir}/idp" />
		</copy>
		<copy todir="${zip.dir}/catissuecore-properties" overwrite="true">
			<fileset dir="${conf.dir}/catissuecore-properties" />
		</copy>
		<copy todir="${zip.dir}/cacore_deployable" overwrite="true">
			<fileset dir="${catissue.modules}/cacore_deployable" />
		</copy>
		<copy file="${conf.dir}/dbunit_temp.xml" todir="${zip.dir}" overwrite="true" />
		<copy todir="${zip.dir}/lib" overwrite="true">
			<fileset file="${extra_lib.dir}/ant-contrib.jar" />
			<fileset file="${web_inf_lib.dir}/mysql-connector-java-5.0.8-bin.jar" />
			<fileset file="${web_inf_lib.dir}/ojdbc14.jar" />
			<fileset file="${src_lib.dir}/dom4j-1.6.1.jar" />
			<fileset file="${src_lib.dir}/j2ee.jar" />
			<fileset file="${src_lib.dir}/log4j.jar" />
			<fileset file="${extra_lib.dir}/puretls.jar" />
			<fileset file="${extra_lib.dir}/cog-jglobus.jar" />
			<fileset file="${extra_lib.dir}/cryptix32.jar" />
			<fileset file="${extra_lib.dir}/cryptix-asn1.jar" />
			<fileset file="${extra_lib.dir}/jce-jdk13-125.jar" />
			<fileset file="${extra_lib.dir}/cryptix.jar" />
		</copy>
		<copy file="${db-common.src.dir}/MySql_DB_Creation.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="${db-common.src.dir}/Oracle_DB_Creation.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="${db-common.src.dir}/DBValidate_Suite1.0.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="${db-common.src.dir}/DBValidate_V1.2.0.1.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/Sample-login-config.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/Sample-properties-service.xml" todir="${zip.dir}" overwrite="true" />
		<copy todir="${zip.dir}/images" overwrite="true">
			<fileset file="${catissue.web}/images/InstitutionLogo.gif" />
		</copy>
		<copy todir="${zip.dir}/images/uIEnhancementImages" overwrite="true">
			<fileset file="${catissue.web}/images/uIEnhancementImages/siteman_logo.gif" />
		</copy>
		<copy todir="${zip.dir}/catissue_de_integration_client" overwrite="true">
			<fileset dir="${catissue.java}/catissue_de_integration_client" />
		</copy>
		<copy todir="${zip.dir}/catissue_de_integration_client/lib" overwrite="true">
			<fileset dir="${de_integration_client_lib.dir}" />
		</copy>
		<copy todir="${zip.dir}/BulkOperations" overwrite="true">
			<fileset dir="${catissue.modules}/BulkOperations" />
		</copy>
		<copy todir="${zip.dir}/BulkOperations/lib" overwrite="true">
			<fileset dir="${caTissueSuite_Client_lib.dir}">
				<include name="*.jar" />
				<exclude name="AdvanceQuery*.jar" />
			</fileset>
		</copy>

		<copy todir="${zip.dir}/BulkOperations/lib" overwrite="true">
			<fileset dir="${temp-catissue-cacore-lib}">
				<include name="catissue_cacore-beans.jar" />
			</fileset>
		</copy>
		<copy file="${src.dir}/ApplicationResources.properties" todir="${zip.dir}/BulkOperations/conf" overwrite="true" />
		<copy todir="${zip.dir}/minimalDataSharing" overwrite="true">
			<fileset dir="${catissue.java}/minimalDataSharing" />
		</copy>

		&lt;!&ndash;- caTIES related files  start&ndash;&gt;
		<copy todir="${zip.dir}/caTIES_conf" overwrite="true"><fileset dir="${catissue.modules}/caTIES/conf" /></copy>
		<copy file="${conf.dir}/Dataset.dtd" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/JniDeID.dll" todir="${zip.dir}" overwrite="true" />
		<copy file="${catissue.modules}/caTIES/conf/gate.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/deploycaties.xml" todir="${zip.dir}" overwrite="true" />
		&lt;!&ndash;- caTIES related files end&ndash;&gt;

		&lt;!&ndash; DE conf files &ndash;&gt;
		<copy todir="${zip.dir}/DE_conf" overwrite="true" verbose="true">
			<fileset dir="${catissue.modules}/DE/conf" />
		</copy>

		&lt;!&ndash; Copying private public migrator directory &ndash;&gt;
		<copy todir="${zip.dir}/private_public_migrator" overwrite="true">
			<fileset dir="${catissue.java}/private_public_migrator" />
		</copy>
		<copy todir="${zip.dir}/private_public_migrator/lib" overwrite="true">
			<fileset dir="${private_public_migrator_lib.dir}" />
		</copy>

		&lt;!&ndash; Copying IISSettings directory &ndash;&gt;
		<copy todir="${zip.dir}/IISSettings" overwrite="true">
			<fileset dir="${catissue.modules}/IISSettings" />
		</copy>

		<antcall target="create_API_client_zip" />
		<antcall target="create_Struts_Test_zip" />
		<property name="bo.properties.file" value="${software.dir}/caTissue/test/perl/bulkOperation/bulkoperations.properties" />
		<property file="${bo.properties.file}" />
		<echo message="test.framework.dir.path = ${test.framework.dir.path}" />
		<if>
			<not>
				<equals arg1="" arg2="${test.framework.dir.path}" />
			</not>
			<then>
				<antcall target="create_BO_Test_zip">
				</antcall>
			</then>
		</if>
	</target>

-->

	<target name="create_zip" depends="createJavaDoc, installable_build_war">
		<property name="zip.dir" value="${dist.dir}" />
		<property name="zip.file" value="${target.dir}/dist/caTissue_Suite_v${application.version}_Installable.zip" />

		<copy file="${docs.dir}/README.txt" todir="${zip.dir}" overwrite="true" />

		<copy file="${target.dir}/dist/bulkoperator.zip" todir="${zip.dir}/modules/bulk_operations/lib" overwrite="true" />
		<copy todir="${zip.dir}/modules/bulk_operations/lib" overwrite="true">
			<fileset dir="${caTissueSuite_Client_lib.dir}">
				<include name="*.jar" />
				<exclude name="AdvanceQuery*.jar" />
			</fileset>
		</copy>
		<copy todir="${zip.dir}/modules/bulk_operations/conf" overwrite="true">
			<fileset dir="${catissue.modules}/BulkOperations/conf" />
		</copy>

        <echo message="Copying Grid Services from ${catissue.modules} => ${zip.dir}/modules/caGrid_service"/>
        <copy todir="${zip.dir}/modules/caGrid_service" overwrite="true" verbose="true">
            <fileset dir="${catissue.modules}/"><include name="caTissueDEDataService/**"/></fileset>
            <fileset dir="${catissue.modules}/"><include name="caTissueStaticDataService/**"/></fileset>
            <fileset dir="${catissue.modules}/"><include name="NotificationService/**"/></fileset>
        </copy>

        <copy file="${conf.dir}/cas.war" todir="${zip.dir}/modules/cas/lib" overwrite="true" />

		<copy file="${catissue.modules}/caTIES/conf/gate.zip" todir="${zip.dir}/modules/caTIES/lib" overwrite="true" />
		<copy todir="${zip.dir}/modules/caTIES/conf" overwrite="true">
			<fileset dir="${catissue.modules}/caTIES/conf">
				<exclude name="gate.zip" />
			</fileset>
		</copy>
		<copy file="${conf.dir}/Dataset.dtd" todir="${zip.dir}/modules/caTIES/conf" overwrite="true" />
		<copy file="${conf.dir}/JniDeID.dll" todir="${zip.dir}/modules/caTIES/conf" overwrite="true" />
		<copy file="${conf.dir}/deploycaties.xml" todir="${zip.dir}/modules/caTIES/conf" overwrite="true" />
		<copy file="${conf.dir}/deploycaties.properties" todir="${zip.dir}/modules/caTIES/conf" overwrite="true" />

		<copy todir="${zip.dir}/modules/caTissue/resources/xmi" overwrite="true">
			<fileset file="${docs.dir}/UMLModel/SpecimenEvents.xmi"/>
		</copy>

		<copy todir="${zip.dir}/modules/caTissue/resources/csv" overwrite="true">
			<fileset file="${resources.dir}/csv/SpecimenEvents.csv" />
		</copy>
		<copy todir="${zip.dir}/modules/caTissue/resources/csv" overwrite="true">
					<fileset file="${resources.dir}/SpecimenEvents_PVs.csv" />
				</copy>
		<copy todir="${zip.dir}/modules/caTissue/resources/xml" overwrite="true">
			<fileset file="${resources.dir}/xml/StaticModelMetaData.xsd" />
			<fileset file="${resources.dir}/xml/StaticModelMetaData.xml" />
		</copy>

		<copy todir="${zip.dir}/modules/caTissue/conf/" overwrite="true">
			<fileset file="${resources.dir}/xml/Participant.xml" />
		</copy>

		<copy file="${conf.dir}/log4j.properties" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />

		<copy todir="${zip.dir}/modules/caTissue/images" overwrite="true">
			<fileset file="${catissue.web}/images/uIEnhancementImages/institution_logo.gif" />
		</copy>
		<copy file="${target.dir}/dist/catissuecore.war" todir="${zip.dir}/modules/caTissue/lib" overwrite="true" />
		<copy todir="${zip.dir}/modules/caTissue/lib/common_lib" overwrite="true">
			<fileset dir="${target.lib.dir}/caTissue_lib/common_lib">
			</fileset>
		</copy>
		<copy todir="${zip.dir}/modules/caTissue/lib" overwrite="true">
			<fileset file="${extra_lib.dir}/ant-contrib.jar" />
			<fileset file="${src_lib.dir}/dom4j-1.6.1.jar" />
			<fileset file="${src_lib.dir}/j2ee.jar" />
			<fileset file="${src_lib.dir}/log4j.jar" />
			<fileset file="${common.lib.dir}/mysql-connector-java-5.0.8-bin.jar" />
			<fileset file="${common.lib.dir}/ojdbc14.jar" />
			<fileset file="${extra_lib.dir}/puretls.jar" />
			<fileset file="${extra_lib.dir}/cog-jglobus.jar" />
			<fileset file="${extra_lib.dir}/cryptix32.jar" />
			<fileset file="${extra_lib.dir}/cryptix-asn1.jar" />
			<fileset file="${extra_lib.dir}/jce-jdk13-125.jar" />
			<fileset file="${extra_lib.dir}/cryptix.jar" />
		</copy>
		<copy todir="${zip.dir}/modules/caTissue/conf/catissuecore-properties" overwrite="true">
			<fileset dir="${conf.dir}/catissuecore-properties" />
		</copy>
		<!--<copy file="${temp.dir}/MANIFEST.MF" todir="${zip.dir}" overwrite="true" />
		<copy file="${conf.dir}/sync-description.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/sync-description-ctrp.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/sync-description-gridgrouper.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" /> -->
		<copy file="${conf.dir}/magetab.idf" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/deploy.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/login-config.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/properties-service.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/taggedvalues.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${jboss.conf.dir}/catissuecore-ds.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/Sample-login-config.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/Sample-properties-service.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />

		<copy todir="${zip.dir}/modules/custom_impl_lib" overwrite="true">
			<fileset file="${temp.dir}/Default_label_barcode_gen.jar" />
			<fileset file="${temp.dir}/label_barcode_gen_client.jar" />
			<fileset file="${compile.lib.dir}/IDPAuthenticationManager0_1.jar" />
		</copy>

		<copy file="${target.dir}/dist/dynamicextensions.zip" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="${target.dir}/dist/clientFormCreator.zip" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="${web_inf_lib.dir}/DynamicExtensions.jar" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="${conf.dir}/DEDeploy.xml" todir="${zip.dir}/modules/dynamic_extensions/conf" overwrite="true" />
		<copy file="${conf.dir}/Show_Hide_Forms.xml" todir="${zip.dir}/modules/dynamic_extensions/conf" overwrite="true" />
		<copy todir="${zip.dir}/modules/dynamic_extensions/conf" overwrite="true" verbose="true">
			<fileset dir="${catissue.modules}/DE/conf" />
		</copy>

        <!-- caCoreSDK 4.2 -->
        <if>
            <not>
                <available file="${target.dir}/dist/${cacore-sdk-4.2-src.file}" />
            </not>
            <then>
                <get src="${cacore-sdk-4.2-src.url}" dest="${target.dir}/dist/${cacore-sdk-4.2-src.file}" />
            </then>
        </if>
        <copy file="${target.dir}/dist/${cacore-sdk-4.2-src.file}" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />

        <!--caCoreSDK files for dozer-->
        <echo message="Copying caCoreSDK files for dozer artifacts generation..." />
        <zip destfile="${zip.dir}/modules/dynamic_extensions/lib/cacore-sdk.4.2-dozer.zip" basedir="${catissue.modules}/caCORE-SDK-dozer-templates/caCoreSDK.4.2.dozer" />

		<!--<copy file="CA.war" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="pathologySpecimen.war" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="pathologySCG.war" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />-->

		<copy todir="${zip.dir}/modules/identity_provider_support/conf" overwrite="true">
			<fileset dir="${conf.dir}/idp" />
		</copy>

		<copy todir="${zip.dir}/modules/minimal_data_sharing" overwrite="true">
			<fileset dir="${catissue.modules}/minimalDataSharing/db" />
			<fileset dir="${catissue.modules}/minimalDataSharing/conf" />
			<fileset dir="${catissue.modules}/minimalDataSharing/build" />
			<fileset dir="${catissue.modules}/minimalDataSharing/src/main/resources" />
			<fileset dir="${catissue.modules}/minimalDataSharing/src/main/java" />
		</copy>

		<copy file="${temp.dir}/printservice_module.jar" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />
		<copy file="${temp.dir}/printservice_client.jar" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />
		<copy file="${web_inf_lib.dir}/PrintCatissueCore_Client.jar" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />
		<copy file="${conf.dir}/caTissuePrintWebService.war" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />

		<copy todir="${zip.dir}/modules/private_public_migrator" overwrite="true">
			<fileset dir="${catissue.modules}/private_public_migrator" />
		</copy>
		<copy todir="${zip.dir}/modules/private_public_migrator/lib" overwrite="true">
			<fileset dir="${private_public_migrator_lib.dir}" />
		</copy>

		<copy file="${target.dir}/dist/AdvanceQuery_Installable.zip" todir="${zip.dir}/modules/query/lib" overwrite="true" />
		<copy file="${conf.dir}/taggedvalues.xml" todir="${zip.dir}/modules/query/conf" overwrite="true" />
		<!--<copy file="${conf.dir}/paths.txt" todir="${zip.dir}/modules/query/conf" overwrite="true" /> -->
		<copy file="${conf.dir}/paths.txt" todir="${zip.dir}" overwrite="true" />

		<antcall target="create_API_client_zip" />
		<antcall target="create_Struts_Test_zip" />
		<property name="bo.properties.file" value="${catissue.modules}/tests/perl/bulkOperation/bulkoperations.properties" />
		<property file="${bo.properties.file}" />
		<echo message="test.framework.dir.path = ${test.framework.dir.path}" />
		<if>
			<not>
				<equals arg1="" arg2="${test.framework.dir.path}" />
			</not>
			<then>
				<antcall target="create_BO_Test_zip">
				</antcall>
			</then>
		</if>
	</target>

	<target name="create_API_client_zip">
		<property name="APIclientzip.dir" value="${target.dir}/dist/caTissueSuite_ApiClient_v${application.version}_Installable" />
		<property name="APIclientzip.file" value="${target.dir}/dist/caTissueSuite_ApiClient_v${application.version}_Installable.zip" />
		<delete file="${APIclientzip.file}" />
		<delete dir="${APIclientzip.dir}" />
		<mkdir dir="${APIclientzip.dir}" />
		<copy todir="${APIclientzip.dir}/caTissueSuite_Client" overwrite="true">
			<fileset dir="${catissue.test}/unit/caTissueSuite_Client" />
		</copy>
		<delete dir="${APIclientzip.dir}/caTissueSuite_Client/nightly_build_report" />
		<copy todir="${APIclientzip.dir}/caTissueSuite_Client/lib" overwrite="true">
			<fileset dir="${web_inf_lib.dir}">
				<include name="junit-4.1.jar" />
				<include name="asm-1.5.3.jar" />
				<include name="cglib-2.1_3.jar" />
				<include name="commons-codec-1.3.jar" />
				<include name="commons-logging-1.1.1.jar" />
				<include name="dom4j-1.6.1.jar" />
				<include name="sdk-grid-remoting-4.2.jar" />
				<include name="sdk-client-framework-4.2.jar" />
				<include name="sdk-security-client-4.2.jar" />
				<include name="sdk-writable-api-client-4.2.jar" />
				<include name="caGrid-CQL-cql.1.0-1.3.jar" />
				<include name="catissue_cacore-beans.jar" />
				<include name="castor-0.9.9.jar" />
				<include name="cog-jglobus.jar" />
				<include name="log4j.jar" />
				<include name="commons-lang.jar" />
				<include name="xercesImpl.jar" />

				<include name="AdvanceQuery.jar" />
				<include name="bulkoperator.jar" />
				<include name="commonpackage-1.2.w1.jar" />
				<include name="DAO-1.1.9.5.jar" />
				<include name="DynamicExtensions.jar" />
				<include name="ParticipantManager.jar" />
				<include name="SimpleQuery-1.1.9.2.2.jar" />
				<include name="washu-commons-1.1.8.jar" />
			</fileset>
			<fileset dir="${caTissueSuite_Client_lib.dir}">
				<include name="catissuecore.jar" />
				<include name="catissue_cacore-schema.jar" />
				<include name="jaxen-1.1.1.jar" />
				<include name="sdk-security-client-4.2.jar" />
				<include name="spring-2.0.2.jar" />
			</fileset>
			<fileset dir="${common.lib.dir}">
				<include name="acegi-security-1.0.4.jar" />
				<include name="antlr-2.7.6.jar" />
				<include name="axis.jar" />
				<include name="jaxrpc.jar" />
				<include name="jdom-1.1.jar" />
				<include name="hibernate3.jar" />
			</fileset>
		</copy>
		<zip destfile="${APIclientzip.file}" basedir="${APIclientzip.dir}" />
		<delete dir="${APIclientzip.dir}" />
	</target>

	<target name="create_Struts_Test_zip">
		<property name="StrutsTestzip.dir" value="${target.dir}/dist/caTISSUE_Struts_Test_v${application.version}_Installable" />
		<property name="StrutsTestzip.file" value="${target.dir}/dist/caTissue_Struts_Test_v${application.version}_Installable.zip" />

		<delete file="${StrutsTestzip.file}" />
		<delete dir="${StrutsTestzip.dir}" />
		<mkdir dir="${StrutsTestzip.dir}" />

		<copy todir="${StrutsTestzip.dir}/CaTissue_TestCases" overwrite="true">
			<fileset dir="${catissue.test}/struts/CaTissue_TestCases" />
		</copy>

		<copy todir="${StrutsTestzip.dir}/CaTissue_TestCases/lib" overwrite="true" verbose="true">
			<fileset dir="${CaTissue_TestCases_lib.dir}" />
		</copy>

		<copy todir="${StrutsTestzip.dir}/cobertura/lib" overwrite="true" verbose="true">
			<fileset dir="${cobertura_lib.dir}" />
		</copy>

		<copy todir="${StrutsTestzip.dir}/CaTissue_TestCases/extra_lib" overwrite="true" verbose="true">
			<fileset dir="${caTissueSuite_Client_lib.dir}" />
		</copy>

		<copy todir="${StrutsTestzip.dir}" overwrite="true" verbose="true">
			<fileset dir="${catissue.test}/struts">
				<include name="Struts_testcases_build.xml" />
			</fileset>
		</copy>

		<copy todir="${StrutsTestzip.dir}" overwrite="true" verbose="true">
			<fileset dir="${catissue.test}/struts">
				<include name="Old_Struts_testcases_build.xml" />
			</fileset>
		</copy>

		<zip destfile="${StrutsTestzip.file}" basedir="${StrutsTestzip.dir}" />
	</target>

	<target name="create_BO_Test_zip">
		<echo message="base.dir = ${base.dir}" />
		<property name="BulkOperationZIP.dir" value="${target.dir}/dist/caTISSUE_BulkOperations_Test_v${application.version}_Installable" />
		<property name="BulkOperationZIP.file" value="${target.dir}/dist/caTISSUE_BulkOperations_Test_v${application.version}_Installable.zip" />
		<delete file="${BulkOperationZIP.file}" />
		<delete dir="${BulkOperationZIP.dir}" />
		<mkdir dir="${BulkOperationZIP.dir}" />
		<copy todir="${BulkOperationZIP.dir}" overwrite="true">
			<fileset dir="${catissue.test}/perl/bulkOperation" />
		</copy>
		<copy todir="${BulkOperationZIP.dir}" overwrite="true">
			<fileset dir="${catissue.test}/perl/resources/BulkOperations" />
		</copy>
		<echo message="bo.properties.file = ${bo.properties.file}" />
		<echo message="test.framework.dir.path = ${test.framework.dir.path}" />
		<copy todir="${BulkOperationZIP.dir}" overwrite="true">
			<fileset dir="${test.framework.dir.path}" />
		</copy>
		<zip destfile="${BulkOperationZIP.file}" basedir="${BulkOperationZIP.dir}" />
		<delete dir="${BulkOperationZIP.dir}" />
	</target>

	<!-- =================================================================== -->
	<!-- Junit test case execution report                                    -->
	<!-- =================================================================== -->
	<target name="run_junit_testcases">
		<mkdir dir="${target.dir}/reports" />
		<mkdir dir="${target.dir}/reports/junit" />

		<junit printsummary="yes" fork="yes" haltonfailure="no">
			<formatter type="xml" />

			<!-- Specify the name of the coverage data file to use. The value specified below is the default. -->
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.dir}/coverage.ser" />
			<classpath>
				<pathelement path="${cobertura.dir}" />
				<pathelement path="${target.dir}" />
			</classpath>
			<classpath refid="junit.classpath" />
			<batchtest todir="${target.dir}/reports/junit">
				<fileset dir="${src.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="gen_report_junit_testcases">
		<antcall target="clean" />
		<antcall target="compile" />
		<antcall target="run_junit_testcases" />

		<mkdir dir="${report.dir}/reports/junit" />
		<junitreport todir="${report.dir}/reports/junit">
			<fileset dir="${target.dir}/reports/junit">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}/reports/junit" />
		</junitreport>
	</target>

	<!-- =================================================================== -->
	<!-- Junit TestCases for Nightly Build  -->
	<!-- =================================================================== -->
	<target name="compile_junit_TestCases">
		<javac destdir="${test.class.dir}" includes="**/*.java" includeAntRuntime="false" target="1.6">
			<src path="${test.src.dir}" />
			<classpath>
				<fileset dir="${caTissueSuite_Client_lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${classes.dir}">
					<include name="**/*.class" />
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="runJunitTestCases" depends="compile_junit_TestCases">
		<mkdir dir="${report.dir}" />
		<mkdir dir="${report.dir}/Html_reports" />

		<junit printsummary="yes" fork="yes" haltonfailure="no">
			<formatter type="xml" />
			<!--<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.dir}/coverage.ser" />-->
			<classpath>
				<pathelement path="${base.dir}/test/unit/caTissueSuite_Client/conf" />
				<fileset dir="${caTissueSuite_Client_lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<classpath>
				<!--<pathelement path="${cobertura.dir}" />
				<pathelement path="${target.dir}" />-->
				<pathelement path="${test.class.dir}" />
			</classpath>
			<classpath refid="junit.classpath" />
			<batchtest todir="${report.dir}">
				<fileset dir="${test.class.dir}" includes="**/CaTissueTestSuite.class" />
			</batchtest>
			<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true" />
		</junit>
	</target>
	<target name="runNightlyBuild" depends="runJunitTestCases">
		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}/Html_reports" />
		</junitreport>
	</target>

	<property name="reportgenerator.input.junit_api_mysql_fresh_file" value="${base.dir}/XmlReport/JUnitReports/mysql_fresh_report.xml" />
	<property name="reportgenerator.input.junit_api_mysql_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/mysql_upgrade_report.xml" />
	<property name="reportgenerator.input.junit_api_oracle_fresh_file" value="${base.dir}/XmlReport/JUnitReports/oracle_fresh_report.xml" />
	<property name="reportgenerator.input.junit_api_oracle_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/oracle_upgrade_report.xml" />
	<property name="reportgenerator.input.junit_struts_mysql_fresh_file" value="${base.dir}/XmlReport/JUnitReports/mysql_fresh_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_mysql_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/mysql_upgrade_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_oracle_fresh_file" value="${base.dir}/XmlReport/JUnitReports/oracle_fresh_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_oracle_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/oracle_upgrade_struts_report.xml" />

	<target name="GenerateNightlyBuildReport" depends="compile">
		<copy file="${conf.dir}/TestResult.htm" todir="${base.dir}/XmlReport" />
		<java classname="NightlyBuildReportGenerator" fork="true">
			<arg value="${reportgenerator.input.junit_api_mysql_fresh_file}" />
			<arg value="${reportgenerator.input.junit_api_mysql_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_api_oracle_fresh_file}" />
			<arg value="${reportgenerator.input.junit_api_oracle_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_struts_mysql_fresh_file}" />
			<arg value="${reportgenerator.input.junit_struts_mysql_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_struts_oracle_fresh_file}" />
			<arg value="${reportgenerator.input.junit_struts_oracle_upgrade_file}" />
			<classpath>
				<pathelement location="./WEB-INF/classes" />
			</classpath>
		</java>
	</target>

	<!-- Create the Applet JAR Begins-->
	<target name="build_catissue_applet_jar" depends="build_catissue_applet_compile">
		<mkdir dir="${catissue.applet.dir}" />
		<delete>
			<fileset dir="${catissue.applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</delete>
		<copy todir="${catissue.applet.dir}/images">
			<fileset dir="${base.dir}/images">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${catissue.applet.dir}">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/applet/**" />
				<include name="**/edu/wustl/catissuecore/util/global/Constants.class" />
				<include name="**/edu/wustl/common/util/global/Validator.class" />
				<include name="**/edu/wustl/catissuecore/util/global/DefaultValueManager.class" />
			</fileset>
		</copy>
		<jar taskname="buildJar" jarfile="${applet.dir}/CaTissueApplet.jar">
			<fileset dir="${catissue.applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
		<delete includeemptydirs="true">
			<fileset dir="${catissue.applet.dir}">
				<include name="**/*" />
				<exclude name="**/CVS*" />
			</fileset>
		</delete>
	</target>

	<!-- compilation using jdk1.3 -->
	<target name="build_catissue_applet_compile" depends="init">
		<javac destdir="${target.dir}" includeAntRuntime="false" fork="yes" executable="D:/jdk1.3/bin/javac" compiler="javac1.3">
			<src path="${src.dir}" />
			<include name="**/edu/wustl/catissuecore/applet/**" />
			<include name="**/edu/wustl/catissuecore/util/global/Constants.java" />
			<include name="**/edu/wustl/common/util/global/Validator.java" />
			<include name="**/edu/wustl/catissuecore/util/global/DefaultValueManager.java" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<!-- unpack caCORE war into temp folder -->
	<target name="unpack_cacore_war" depends="clean_temp_dir_csmwar">
        <echo message="Using caCore WAR files..." />
		<unwar src="${catissue.modules}/cacore_resources/conf/catissue_cacore.war" dest="${tempCatissuecore.dir}/catissue_cacore" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/jboss-common-jdbc-wrapper.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/ojdbc14-10.2.0.3.0.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/castor-1.0.2.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/jta-1.0.1B.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/csmapi-4.2.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/commons-lang-1.0.1.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/hibernate-3.2.0.ga.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/sdk-grid-jaas-client-4.2.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes/application-config.xml" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes/application-config-security.xml" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes/application-config-web.xml" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes/application-config-web-security.xml" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes/catissuecore.csm.new.hibernate.cfg.xml" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes/csm.ehcache" />

		<!-- deleting jar which are creating conflict for printing service-->
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/saaj-1.2.jar" />
		<delete file="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib/jaxrpc-1.1.jar" />

		<!-- Replacing custom code and hbm files in the respective jars -->
		<property name="temp-catissue-cacore-lib" location="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/lib" />
		<property name="catissue_cacore-beans-dir" value="${temp-catissue-cacore-lib}/catissue_cacore-beans" />

		<unjar src="${temp-catissue-cacore-lib}/catissue_cacore-beans.jar" dest="${catissue_cacore-beans-dir}" />

		<delete dir="${catissue_cacore-beans-dir}/edu/common" />
		<delete dir="${catissue_cacore-beans-dir}/edu/wustl/common" />
		<delete includeemptydirs="true">
			<fileset dir="${catissue_cacore-beans-dir}/edu/wustl/catissuecore/domain">
				<include name="AbstractSpecimen.java" />
				<include name="CollectionProtocol.java" />
				<include name="Participant.java" />
				<include name="ParticipantMedicalIdentifier.java" />
				<include name="Site.java" />
				<include name="Race.java" />
				<include name="ISpecimenTypeDomain.java" />
				<include name="CollectionProtocolRegistration.java" />
				<include name="AbstractSpecimen.class" />
				<include name="CollectionProtocol.class" />
				<include name="Participant.class" />
				<include name="ParticipantMedicalIdentifier.class" />
				<include name="Site.class" />
				<include name="Race.class" />
				<include name="ISpecimenTypeDomain.class" />
				<include name="CollectionProtocolRegistration.class" />
			</fileset>
			<fileset dir="${catissue_cacore-beans-dir}/edu/wustl/catissuecore/domain/deintegration">
							<include name="ActionApplicationRecordEntry.java" />
							<include name="ActionApplicationRecordEntry.class" />
			</fileset>
			<fileset dir="${catissue_cacore-beans-dir}/edu/wustl/catissuecore/domain/processingprocedure">
				<include name="ActionApplication.java" />
				<include name="ActionApplication.class" />
				<!--include name="AbstractApplication.java" />
				<include name="AbstractApplication.class" />
				<include name="DefaultAction.java" />
				<include name="DefaultAction.class" /-->
			</fileset>
		</delete>

		<delete file="${temp-catissue-cacore-lib}/catissue_cacore-beans.jar" />
		<jar destfile="${temp-catissue-cacore-lib}/catissue_cacore-beans.jar" basedir="${catissue_cacore-beans-dir}" />
		<delete dir="${catissue_cacore-beans-dir}" />
		<delete file="${catissue_cacore-beans-dir}/catissue_cacore-orm.jar" />

		<copy todir="${web_inf_lib.dir}" overwrite="true">
			<fileset dir="${temp-catissue-cacore-lib}">
				<include name="sdk-*4.2.jar" />
				<!--<exclude name="sdk-grid-jaas-client-4.2.jar"/>-->
			</fileset>
		</copy>
		<delete file="${web_inf_lib.dir}/sdk-grid-jaas*.jar" />

		<copy file="${catissue.modules}/cacore_resources/conf/application-config.xml" todir="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes" failonerror="yes" verbose="true" />
		<copy file="${catissue.modules}/cacore_resources/conf/application-config-security.xml" todir="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes" failonerror="yes" verbose="true" />
		<copy file="${temp-catissue-cacore-lib}/catissue_cacore-beans.jar" todir="${web_inf_lib.dir}" overwrite="true" failonerror="true" verbose="true" />
		<copy file="${temp-catissue-cacore-lib}/caGrid-CQL-cql.1.0-1.3.jar" todir="${web_inf_lib.dir}" overwrite="true" failonerror="true" verbose="true" />
		<copy file="${temp-catissue-cacore-lib}/catissue_cacore-beans.jar" todir="${cacore.client.dir}/lib" overwrite="true" failonerror="true" verbose="true" />
		<copy file="${temp-catissue-cacore-lib}/catissue_cacore-beans.jar" todir="${caTissueSuite_Client_lib.dir}" overwrite="true" failonerror="true" verbose="true" />
		<copy file="${temp-catissue-cacore-lib}/catissue_cacore-beans.jar" todir="${de_integration_client_lib.dir}" overwrite="true" failonerror="true" verbose="true" />
		<copy file="${temp-catissue-cacore-lib}/catissue_cacore-beans.jar" todir="${private_public_migrator_lib.dir}" overwrite="true" failonerror="true" verbose="true" />
		<!--<copy file="${temp-catissue-cacore-lib}/ehcache-1.2.4.jar" todir="${web_inf_lib.dir}" overwrite="true" failonerror="true"
			verbose="true" />-->
	</target>
	<target name="replace_database_type">
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<replace dir="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes" propertyfile="caTissueInstall.properties">
					<include name="orm1.cfg.xml" />
					<replacefilter token="@@dialect@@" value="${mysql.dialect.h3.string}" />
				</replace>
			</then>
		</if>
		<if>
			<equals arg1="oracle" arg2="${database.type}" />
			<then>
				<replace dir="${tempCatissuecore.dir}/catissue_cacore/WEB-INF/classes" propertyfile="caTissueInstall.properties">
					<include name="orm1.cfg.xml" />
					<replacefilter token="@@dialect@@" value="${oracle.dialect.h3.string}" />
				</replace>
			</then>
		</if>
	</target>

	<!-- build catissuecore client jar to content latest domain classes & put inside client lib folder-->
	<target name="build_client_jar">
		<jar taskname="buildClientJar" jarfile="${tempCatissuecore.dir}/catissuecore.jar">
			<fileset dir="${classes.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**" />
				<include name="**/edu/wustl/catissuecore/actionForm/**" />
				<include name="**/edu/wustl/catissuecore/util/**" />
				<include name="**/edu/wustl/catissuecore/client/**" />
				<include name="**/edu/wustl/catissuecore/bean/**" />
				<include name="**/edu/wustl/catissuecore/namegenerator/**" />
				<include name="**/edu/wustl/catissuecore/caties/**" />
				<include name="**/edu/wustl/catissuecore/hbm/**" />
				<include name="**/edu/wustl/catissuecore/cdms/integrator/**" />
				<include name="**/edu/wustl/catissuecore/factory/**" />
				<include name="**/edu/wustl/catissuecore/cacore/**" />

				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
		<copy todir="${caTissueSuite_Client_lib.dir}" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="commonpackage*.jar" />
				<include name="washu-commons*.jar" />
				<include name="DAO*.jar" />
				<include name="DynamicExtensions*.jar" />
				<include name="SimpleQuery*.jar" />
				<include name="securityManager*.jar" />
				<include name="AdvanceQuery*.jar" />
				<include name="bulkoperator.jar" />
			</fileset>
			<fileset dir="${tempCatissuecore.dir}">
				<include name="catissuecore.jar" />
			</fileset>
		</copy>
		<copy todir="${de_integration_client_lib.dir}" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="commonpackage*.jar" />
				<include name="washu-commons*.jar" />
				<include name="DAO*.jar" />
				<include name="SimpleQuery*.jar" />
				<include name="DynamicExtensions*.jar" />
				<include name="securityManager*.jar" />
				<include name="AdvanceQuery*.jar" />
			</fileset>
			<fileset dir="${tempCatissuecore.dir}">
				<include name="catissuecore.jar" />
			</fileset>
		</copy>
		<copy todir="${private_public_migrator_lib.dir}" overwrite="true">
			<fileset dir="${tempCatissuecore.dir}">
				<include name="catissuecore.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="commonpackage*.jar" />
				<include name="washu-commons*.jar" />
				<include name="DAO*.jar" />
				<include name="DynamicExtensions*.jar" />
				<include name="SimpleQuery*.jar" />
				<include name="securityManager*.jar" />
				<include name="AdvanceQuery*.jar" />
			</fileset>
		</copy>
	</target>
	<target name="sendMail" description="Send mail">
		<mail ssl="off" user="${proxy.username}" password="${proxy.password}" mailhost="${proxy.host}" tolist="${proxy.to}" cclist="${proxy.cc}" subject="${proxy.subject}" from="${proxy.from}">
			<message> "${proxy.message}"</message>
			<fileset dir="${proxy.dir1}" includes="*.*">
			</fileset>
			<fileset dir="${proxy.dir2}" includes="${proxy.fileName}">
			</fileset>
		</mail>
	</target>
	<target name="build_DomainObject_jar" depends="compile" description="To create jar which contains domain object along with its hbm file. This is required for Query Metedata loading.">
		<jar taskname="buildJar" jarfile="${base.dir}/catissueDomain.jar">
			<fileset dir="${target.dir}">
				<include name="**/*.hbm.xml" />
				<include name="**/edu/wustl/catissuecore/domain/**" />
				<include name="**/edu/wustl/catissuecore/actionForm/**" />
				<include name="**/edu/wustl/catissuecore/bean/**" />
			</fileset>
		</jar>
	</target>
	<target name="build_jar_for_clinportal">
		<mkdir dir="${base.dir}/caTissueCore_Jar/temp" />
		<copy todir="${base.dir}/caTissueCore_Jar/temp">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**" />
				<include name="**/edu/wustl/catissuecore/actionForm/**" />
				<include name="**/edu/wustl/catissuecore/util/**" />
				<include name="**/edu/wustl/catissuecore/hbm/**" />
				<include name="**/edu/wustl/catissuecore/action/**" />
				<include name="**/edu/wustl/catissuecore/bizLogic/**" />
			</fileset>
		</copy>
		<delete>
			<fileset dir="${base.dir}/caTissueCore_Jar/temp">
				<include name="**/edu/wustl/catissuecore/action/annotations/**" />
			</fileset>
		</delete>

		<jar taskname="buildJar" jarfile="${base.dir}/caTissueCore_Jar/catissuecore.jar">
			<fileset dir="${base.dir}/caTissueCore_Jar/temp" />
		</jar>
		<delete dir="${base.dir}/caTissueCore_Jar/temp" />
	</target>

	<property name="filename" value="" />
	<property name="hookentity" value="" />
	<property name="condition" value="" />
	<property name="package" value="" />

	<target name="import_xmi">
		<java classname="edu.wustl.catissuecore.annotations.xmi.ImportXmi" fork="true">
			<arg value="${filename}" />
			<arg value="${hookentity}" />
			<arg value="${condition}" />
			<arg value="${package}" />
			<classpath>
				<pathelement location="${target.dir}" />
				<pathelement location="${target.dir}/temp/WEB-INF/classes" />
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="export_xmi" depends="compile">
		<java classname="edu.wustl.catissuecore.annotations.xmi.XMIExporter" fork="true">
			<arg value="${groupname}" />
			<arg value="${filename}" />
			<arg value="${version}" />
			<classpath>
				<pathelement location="${target.dir}" />
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<!-- flex related targets -->
	<taskdef resource="flexTasks.tasks" classpath="${taskdef_lib.dir}/flexTasks.jar" />

	<target name="compile_dag_flex">
		<mxmlc file="${FLEX_APP_ROOT}/dag/Dag.mxml" keep-generated-actionscript="true">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />
			<source-path path-element="${FLEX_HOME}/frameworks" />
		</mxmlc>
	</target>
	<target name="compile_multiplespecimen_flex">
		<mxmlc file="${FLEX_APP_ROOT}/multiplespecimen/MultipleSpecimen.mxml" keep-generated-actionscript="false">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />

			<source-path path-element="${FLEX_HOME}/frameworks" />
			<compiler.library-path dir="${flex.dir}" append="true">
				<include name="libs" />
			</compiler.library-path>

		</mxmlc>
	</target>
	<target name="compile_layout_flex">
		<mxmlc file="${FLEX_APP_ROOT}/biospecimen/Layout.mxml" keep-generated-actionscript="false">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />
			<compiler.library-path dir="${flex.dir}" append="true">
				<include name="libs/AutoComplete.swc" />
			</compiler.library-path>
		</mxmlc>
	</target>
	<!-- flex related target finish -->

	<!-- shippingtracking - start -->
	<target name="build_client_jar_for_st">
		<jar taskname="buildClientJar" jarfile="${tempCatissuecore.dir}/catissuecore.jar">
			<fileset dir="${classes.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**" />
				<include name="**/edu/wustl/catissuecore/actionForm/**" />
				<include name="**/edu/wustl/catissuecore/util/**" />
				<include name="**/edu/wustl/catissuecore/client/**" />
				<include name="**/edu/wustl/catissuecore/bean/**" />
				<include name="**/edu/wustl/catissuecore/namegenerator/**" />
				<include name="**/edu/wustl/catissuecore/caties/**" />
				<include name="**/edu/wustl/catissuecore/hbm/**" />
				<include name="**/edu/wustl/catissuecore/bizlogic/**" />

				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
	</target>
	<!-- shippingtracking - end -->

	<target name="dist" depends="create_zip" />
	<!--<target name="copy:property:files">
		<copy file="${conf.dir}/properties-service.xml" todir="${dist.dir}" overwrite="true" />
		<copy file="${conf.dir}/allTokens.properties" todir="${dist.dir}" overwrite="true" />
		<copy file="${conf.dir}/build-properties.xml" todir="${dist.dir}" overwrite="true" />
		<copy file="${conf.dir}/caTissueCdmsIntegration.properties" todir="${dist.dir}" overwrite="true" />
		<copy file="${conf.dir}/deploycaties.properties" todir="${dist.dir}" overwrite="true" />
		<copy file="${conf.dir}/performance.properties" todir="${dist.dir}" overwrite="true" />
-->
	<!--Copying bulkOperation.properties file-->
	<!--<copy todir="${dist.dir}/catissuecore-properties" overwrite="true">
			<fileset dir="${conf.dir}">
				<include name="bulkOperation.properties" />
			</fileset>
		</copy>
		<delete dir="${base.dir}/bulkoperation" />
	</target>
-->
	<!-- Added this target for new v20 zip restructing. Uncomment this when new zip is ready -->
	<target name="copy:property:files">
		<copy file="${conf.dir}/properties-service.xml" todir="${dist.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/allTokens.properties" todir="${dist.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/build-properties.xml" todir="${dist.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/dbunit_temp.xml" todir="${dist.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/caTissueCdmsIntegration.properties" todir="${dist.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="${conf.dir}/deploycaties.properties" todir="${dist.dir}/modules/caTIES/conf" overwrite="true" />
		<copy file="${conf.dir}/performance.properties" todir="${dist.dir}/modules/caTissue/conf" overwrite="true" />
		<copy todir="${dist.dir}/modules/bulk_operations/conf" overwrite="true">
			<fileset dir="${conf.dir}">
				<include name="bulkOperation.properties" />
			</fileset>
		</copy>
		<delete dir="${base.dir}/bulkoperation" />
	</target>

	<target name="copy" description="Copies the subproject jars and zips to appropriate locations.">
		<copy todir="${de_integration_client_lib.dir}" overwrite="true">
			<fileset dir="${compile.lib.dir}">
				<include name="AdvanceQuery.jar" />
				<include name="commonpackage-*.jar" />
				<include name="DAO-*.jar" />
				<include name="DynamicExtensions.jar" />
				<include name="ParticipantManager.jar" />
				<include name="securityManager-*.jar" />
				<include name="SimpleQuery-*.jar" />
				<include name="titli-washu-*.jar" />
				<include name="washu-commons-*.jar" />
			</fileset>
		</copy>
		<copy todir="${private_public_migrator_lib.dir}" overwrite="true">
			<fileset dir="${compile.lib.dir}">
				<include name="commonpackage-*.jar" />
				<include name="DAO-*.jar" />
				<include name="DynamicExtensions.jar" />
				<include name="ParticipantManager.jar" />
				<include name="securityManager-*.jar" />
				<include name="query*.jar" />
				<include name="SimpleQuery-*.jar" />
				<include name="titli-washu-*.jar" />
				<include name="washu-commons-*.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="sdk-*.jar" />
			</fileset>
		</copy>
		<copy todir="${web_inf_lib.dir}" overwrite="true">
			<fileset dir="${compile.lib.dir}">
				<include name="commonpackage-*.jar" />
				<include name="DAO-*.jar" />
				<include name="DynamicExtensions.jar" />
				<include name="ParticipantManager.jar" />
				<include name="securityManager-*.jar" />
				<include name="SimpleQuery-*.jar" />
				<include name="titli-washu-*.jar" />
				<include name="washu-commons-*.jar" />
				<include name="AdvanceQuery.jar" />
				<include name="bulkoperator.jar" />
				<include name="query*.jar" />
				<include name="IDPAuthenticationManager0_1.jar" />
			</fileset>
		</copy>
		<copy todir="${caTissueSuite_Client_lib.dir}" overwrite="true">
			<fileset dir="${compile.lib.dir}">
				<include name="AdvanceQuery.jar" />
				<include name="bulkoperator.jar" />
				<include name="commonpackage-*.jar" />
				<include name="DAO-*.jar" />
				<include name="ParticipantManager.jar" />
				<include name="securityManager-*.jar" />
				<include name="SimpleQuery-*.jar" />
			</fileset>
		</copy>
		<copy todir="${src_lib.dir}" overwrite="true">
			<fileset dir="${compile.lib.dir}">
				<include name="DynamicExtensions.jar" />
			</fileset>
		</copy>
		<copy todir="${target.dir}/dist" overwrite="true">
			<fileset dir="${compile.lib.dir}">
				<include name="AdvanceQuery_Installable.zip" />
				<include name="bulkoperator.zip" />
				<include name="clientFormCreator.zip" />
				<include name="dynamicextensions.zip" />
			</fileset>
		</copy>
	</target>
	<target name="delete">
		<delete>
			<fileset dir="${software.dir}/caTissue/modules/tests/unit/caTissueSuite_Client/lib">
				<include name="commonpackage*.jar" />
				<include name="DAO*.jar" />
				<include name="SimpleQuery*.jar" />
				<include name="securityManager*.jar" />
				<include name="AdvanceQuery*.jar" />
				<include name="bulkoperator.jar" />
				<include name="ParticipantManager*.jar" />
			</fileset>
			<fileset dir="${software.dir}/caTissue/modules/catissue_de_integration_client/lib">
				<include name="commonpackage*.jar" />
				<include name="washu-commons*.jar" />
				<include name="DAO*.jar" />
				<include name="DynamicExtensions*.jar" />
				<include name="SimpleQuery*.jar" />
				<include name="securityManager*.jar" />
				<include name="AdvanceQuery*.jar" />
				<include name="ParticipantManager*.jar" />
				<include name="titli-washu*.jar" />
			</fileset>
			<fileset dir="${software.dir}/caTissue/modules/private_public_migrator/lib">
				<include name="commonpackage*.jar" />
				<include name="DAO*.jar" />
				<include name="DynamicExtensions*.jar" />
				<include name="SimpleQuery*.jar" />
				<include name="securityManager*.jar" />
				<include name="ParticipantManager*.jar" />
				<include name="titli-washu*.jar" />
			</fileset>
			<fileset dir="../${software.dir}">
				<include name="AdvanceQuery_Installable.zip" />
				<include name="bulkoperator.zip" />
				<include name="clientFormCreator.zip" />
				<include name="dynamicextensions.zip" />
			</fileset>
		</delete>
	</target>

    <target name="test">
        <echo message="ROOT: ${root.dir}" />
        <echo message="BASE: ${base.dir}" />
        <echo message="WWW: ${catissue.modules}/core" />
        <echo message="CONF: ${conf.dir}" />
        <echo message="MODULES: ${catissue.modules}" />
        <echo message="RESOURCES: ${resources.dir}" />
    </target>

</project>
